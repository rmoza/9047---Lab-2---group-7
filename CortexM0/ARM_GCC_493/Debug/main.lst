ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccO00fQP.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.InitializeSystem,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  21              		.type	InitializeSystem, %function
  22              	InitializeSystem:
  23              	.LFB37:
  24              		.file 1 ".\\main.c"
   1:.\main.c      **** /*****************************************************************************
   2:.\main.c      **** * File Name: main.c
   3:.\main.c      **** *
   4:.\main.c      **** * Version: 1.0
   5:.\main.c      **** *
   6:.\main.c      **** * Description:
   7:.\main.c      **** * This is the top level file for the PSoC 4 BLE Lab 3.
   8:.\main.c      **** *
   9:.\main.c      **** * Hardware Dependency:
  10:.\main.c      **** * CY8CKIT-042 BLE Pioneer Kit
  11:.\main.c      **** *
  12:.\main.c      **** ******************************************************************************
  13:.\main.c      **** * Copyright (2014), Cypress Semiconductor Corporation.
  14:.\main.c      **** ******************************************************************************
  15:.\main.c      **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  16:.\main.c      **** * protected by and subject to worldwide patent protection (United States and
  17:.\main.c      **** * foreign), United States copyright laws and international treaty provisions.
  18:.\main.c      **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  19:.\main.c      **** * license to copy, use, modify, create derivative works of, and compile the
  20:.\main.c      **** * Cypress Source Code and derivative works for the sole purpose of creating
  21:.\main.c      **** * custom software in support of licensee product to be used only in conjunction
  22:.\main.c      **** * with a Cypress integrated circuit as specified in the applicable agreement.
  23:.\main.c      **** * Any reproduction, modification, translation, compilation, or representation of
  24:.\main.c      **** * this software except as specified above is prohibited without the express
  25:.\main.c      **** * written permission of Cypress.
  26:.\main.c      **** *
  27:.\main.c      **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  28:.\main.c      **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  29:.\main.c      **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  30:.\main.c      **** * Cypress reserves the right to make changes without further notice to the
  31:.\main.c      **** * materials described herein. Cypress does not assume any liability arising out
  32:.\main.c      **** * of the application or use of any product or circuit described herein. Cypress
  33:.\main.c      **** * does not authorize its products for use as critical components in life-support
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccO00fQP.s 			page 2


  34:.\main.c      **** * systems where a malfunction or failure may reasonably be expected to result in
  35:.\main.c      **** * significant injury to the user. The inclusion of Cypress' product in a life-
  36:.\main.c      **** * support systems application implies that the manufacturer assumes all risk of
  37:.\main.c      **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  38:.\main.c      **** * limited by and subject to the applicable Cypress software license agreement.
  39:.\main.c      **** *****************************************************************************/
  40:.\main.c      **** 
  41:.\main.c      **** 
  42:.\main.c      **** /*****************************************************************************
  43:.\main.c      **** * Included headers
  44:.\main.c      **** *****************************************************************************/
  45:.\main.c      **** #include <project.h>
  46:.\main.c      **** #include <stdbool.h>
  47:.\main.c      **** #include "main.h"
  48:.\main.c      **** #include "HeartRateProcessing.h"
  49:.\main.c      **** #include "BleProcessing.h"
  50:.\main.c      **** #include "WatchdogTimer.h"
  51:.\main.c      **** 
  52:.\main.c      **** 
  53:.\main.c      **** /*****************************************************************************
  54:.\main.c      **** * Macros
  55:.\main.c      **** *****************************************************************************/
  56:.\main.c      **** #if CONNECTION_PARAM_UPDATE
  57:.\main.c      **** #define TIME_SINCE_CONNECTED_MS         (5000)
  58:.\main.c      **** #endif
  59:.\main.c      **** 
  60:.\main.c      **** /*****************************************************************************
  61:.\main.c      **** * Global variables
  62:.\main.c      **** *****************************************************************************/
  63:.\main.c      **** #if CONNECTION_PARAM_UPDATE
  64:.\main.c      **** static CYBLE_GAP_CONN_UPDATE_PARAM_T hrmConnectionParam =
  65:.\main.c      **** {
  66:.\main.c      ****     16,         /* Minimum connection interval of 20 ms */
  67:.\main.c      ****     16,         /* Maximum connection interval of 20 ms */
  68:.\main.c      ****     49,         /* Slave latency of 49 */
  69:.\main.c      ****     500         /* Supervision timeout of 5 seconds */
  70:.\main.c      **** };
  71:.\main.c      **** #endif
  72:.\main.c      **** 
  73:.\main.c      **** 
  74:.\main.c      **** /*****************************************************************************
  75:.\main.c      **** * Static function definitions
  76:.\main.c      **** *****************************************************************************/
  77:.\main.c      **** 
  78:.\main.c      **** /*****************************************************************************
  79:.\main.c      **** * Function Name: InitializeSystem
  80:.\main.c      **** ******************************************************************************
  81:.\main.c      **** * Summary:
  82:.\main.c      **** * Initializes all the blocks of the system.
  83:.\main.c      **** *
  84:.\main.c      **** * Parameters:
  85:.\main.c      **** * None
  86:.\main.c      **** *
  87:.\main.c      **** * Return:
  88:.\main.c      **** * None
  89:.\main.c      **** *
  90:.\main.c      **** * Theory:
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccO00fQP.s 			page 3


  91:.\main.c      **** * The function enables the Opamp and ADC for the heart rate measurement, and 
  92:.\main.c      **** * setups the BLE component. It also starts the watchdog timer and ensures that 
  93:.\main.c      **** * all the status LEDs are off at system startup. 
  94:.\main.c      **** *
  95:.\main.c      **** * Side Effects:
  96:.\main.c      **** * None
  97:.\main.c      **** *
  98:.\main.c      **** *****************************************************************************/
  99:.\main.c      **** static void InitializeSystem(void)
 100:.\main.c      **** {
  25              		.loc 1 100 0
  26              		.cfi_startproc
  27 0000 80B5     		push	{r7, lr}
  28              		.cfi_def_cfa_offset 8
  29              		.cfi_offset 7, -8
  30              		.cfi_offset 14, -4
  31 0002 00AF     		add	r7, sp, #0
  32              		.cfi_def_cfa_register 7
 101:.\main.c      ****     #if (RGB_LED_IN_PROJECT)
 102:.\main.c      ****         /* Turn off all LEDs */
 103:.\main.c      ****         Led_Advertising_Green_Write(1);
  33              		.loc 1 103 0
  34 0004 0120     		mov	r0, #1
  35 0006 FFF7FEFF 		bl	Led_Advertising_Green_Write
 104:.\main.c      ****         Led_Connected_Blue_Write(1);
  36              		.loc 1 104 0
  37 000a 0120     		mov	r0, #1
  38 000c FFF7FEFF 		bl	Led_Connected_Blue_Write
 105:.\main.c      ****     #endif  /* #if (RGB_LED_IN_PROJECT) */
 106:.\main.c      **** 
 107:.\main.c      ****     /* Enabling Global interrupts */
 108:.\main.c      ****     CyGlobalIntEnable; 
  39              		.loc 1 108 0
  40              	@ 108 ".\main.c" 1
  41 0010 62B6     		CPSIE   i
  42              	@ 0 "" 2
 109:.\main.c      **** 	
 110:.\main.c      ****     /* Start Opamp and ADC components */
 111:.\main.c      **** 	Opamp_Start();
  43              		.loc 1 111 0
  44              		.code	16
  45 0012 FFF7FEFF 		bl	Opamp_Start
 112:.\main.c      ****     ADC_Start();
  46              		.loc 1 112 0
  47 0016 FFF7FEFF 		bl	ADC_Start
 113:.\main.c      **** 	
 114:.\main.c      ****     /* Start BLE component */
 115:.\main.c      ****     CyBle_Start(GeneralEventHandler);
  48              		.loc 1 115 0
  49 001a 044B     		ldr	r3, .L2
  50 001c 181C     		mov	r0, r3
  51 001e FFF7FEFF 		bl	CyBle_Start
 116:.\main.c      ****         
 117:.\main.c      ****     /* Register the Heart Rate Service event handler callback. The function
 118:.\main.c      ****      * to be registered is HrsEventHandler().
 119:.\main.c      ****      */
 120:.\main.c      **** //	CyBle_HrsRegisterAttrCallback(HrsEventHandler); 
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccO00fQP.s 			page 4


 121:.\main.c      ****     
 122:.\main.c      ****     /* Start the Watchdog Timer */
 123:.\main.c      **** 	WatchdogTimer_Start();
  52              		.loc 1 123 0
  53 0022 FFF7FEFF 		bl	WatchdogTimer_Start
 124:.\main.c      **** }
  54              		.loc 1 124 0
  55 0026 BD46     		mov	sp, r7
  56              		@ sp needed
  57 0028 80BD     		pop	{r7, pc}
  58              	.L3:
  59 002a C046     		.align	2
  60              	.L2:
  61 002c 00000000 		.word	GeneralEventHandler
  62              		.cfi_endproc
  63              	.LFE37:
  64              		.size	InitializeSystem, .-InitializeSystem
  65              		.section	.text.main,"ax",%progbits
  66              		.align	2
  67              		.global	main
  68              		.code	16
  69              		.thumb_func
  70              		.type	main, %function
  71              	main:
  72              	.LFB38:
 125:.\main.c      **** 
 126:.\main.c      **** 
 127:.\main.c      **** /*****************************************************************************
 128:.\main.c      **** * Public function definitions
 129:.\main.c      **** *****************************************************************************/
 130:.\main.c      **** 
 131:.\main.c      **** /*****************************************************************************
 132:.\main.c      **** * Function Name: main
 133:.\main.c      **** ******************************************************************************
 134:.\main.c      **** * Summary:
 135:.\main.c      **** * The main function for the project.
 136:.\main.c      **** *
 137:.\main.c      **** * Parameters:
 138:.\main.c      **** * None
 139:.\main.c      **** *
 140:.\main.c      **** * Return:
 141:.\main.c      **** * None
 142:.\main.c      **** *
 143:.\main.c      **** * Theory:
 144:.\main.c      **** * The main function first calls the initialization function to start the 
 145:.\main.c      **** * system, and then enters a loop to run forever. In the main loop, it scans
 146:.\main.c      **** * the heart rate first, then sends a notification packet every second to a 
 147:.\main.c      **** * BLE connected device. It then enters low power (deep sleep) state, waiting
 148:.\main.c      **** * for the periodic wakeup interrupt from watchdog timer.
 149:.\main.c      **** * When the device is disconnected or when advertisement timeout happens, 
 150:.\main.c      **** * the device enters Hibernate mode, waiting for the SW2 switch press to wakeup.
 151:.\main.c      **** *
 152:.\main.c      **** * Side Effects:
 153:.\main.c      **** * None
 154:.\main.c      **** *
 155:.\main.c      **** *****************************************************************************/
 156:.\main.c      **** int main()
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccO00fQP.s 			page 5


 157:.\main.c      **** {
  73              		.loc 1 157 0
  74              		.cfi_startproc
  75 0000 90B5     		push	{r4, r7, lr}
  76              		.cfi_def_cfa_offset 12
  77              		.cfi_offset 4, -12
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 83B0     		sub	sp, sp, #12
  81              		.cfi_def_cfa_offset 24
  82 0004 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
 158:.\main.c      ****     static uint32 previousTimestamp = 0;
 159:.\main.c      ****     static uint32 currentTimestamp = 0;
 160:.\main.c      ****     CYBLE_LP_MODE_T bleMode;
 161:.\main.c      ****     uint8 interruptStatus;
 162:.\main.c      ****     
 163:.\main.c      ****     /* Initialize all blocks of the system */
 164:.\main.c      **** 	InitializeSystem();
  84              		.loc 1 164 0
  85 0006 FFF7FEFF 		bl	InitializeSystem
  86              	.L13:
 165:.\main.c      ****     
 166:.\main.c      ****     /* Run forever */
 167:.\main.c      ****     for(;;)
 168:.\main.c      ****     {
 169:.\main.c      ****         /* Wake up Opamp from low power mode */
 170:.\main.c      ****         /* This API has not effect when Opamp is operating in deep sleep mode */
 171:.\main.c      ****         Opamp_Wakeup();
  87              		.loc 1 171 0
  88 000a FFF7FEFF 		bl	Opamp_Wakeup
 172:.\main.c      ****         
 173:.\main.c      ****         /* Wake up ADC from low power mode */
 174:.\main.c      ****         ADC_Wakeup();
  89              		.loc 1 174 0
  90 000e FFF7FEFF 		bl	ADC_Wakeup
 175:.\main.c      **** 
 176:.\main.c      ****         /* Analog Front End. 
 177:.\main.c      ****          * Detects the input signal and measures Heart Rate 
 178:.\main.c      ****          */
 179:.\main.c      ****         ProcessHeartRateSignal();
  91              		.loc 1 179 0
  92 0012 FFF7FEFF 		bl	ProcessHeartRateSignal
 180:.\main.c      **** 
 181:.\main.c      ****         /* Put ADC in low power mode */
 182:.\main.c      ****         ADC_Sleep();
  93              		.loc 1 182 0
  94 0016 FFF7FEFF 		bl	ADC_Sleep
 183:.\main.c      ****         
 184:.\main.c      ****         /* Put Opamp in low power mode */
 185:.\main.c      ****         /* This API has not effect when Opamp is operating in deep sleep mode */
 186:.\main.c      ****         Opamp_Sleep();
  95              		.loc 1 186 0
  96 001a FFF7FEFF 		bl	Opamp_Sleep
 187:.\main.c      ****         
 188:.\main.c      ****         /* Measure the current system timestamp from watchdog timer */
 189:.\main.c      ****         currentTimestamp = WatchdogTimer_GetTimestamp();        
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccO00fQP.s 			page 6


  97              		.loc 1 189 0
  98 001e FFF7FEFF 		bl	WatchdogTimer_GetTimestamp
  99 0022 021C     		mov	r2, r0
 100 0024 2C4B     		ldr	r3, .L14
 101 0026 1A60     		str	r2, [r3]
 190:.\main.c      ****         
 191:.\main.c      ****         #if CONNECTION_PARAM_UPDATE
 192:.\main.c      ****         /* Update BLE connection parameters a few seconds after connection */
 193:.\main.c      ****         if((CyBle_GetState() == CYBLE_STATE_CONNECTED) && 
 194:.\main.c      ****            (connParamRequestState == CONN_PARAM_REQUEST_NOT_SENT))
 195:.\main.c      ****         {
 196:.\main.c      ****             if((currentTimestamp - timestampWhenConnected) > TIME_SINCE_CONNECTED_MS)
 197:.\main.c      ****             {
 198:.\main.c      ****                 CyBle_L2capLeConnectionParamUpdateRequest(cyBle_connHandle.bdHandle, &hrmConnection
 199:.\main.c      ****                 connParamRequestState = CONN_PARAM_REQUEST_SENT;
 200:.\main.c      ****             }
 201:.\main.c      ****         }        
 202:.\main.c      ****         #endif
 203:.\main.c      ****         
 204:.\main.c      ****         /* Send Heart Rate notification over BLE every second.
 205:.\main.c      ****          * Check if the current timestamp minus previous exceeds 1000 ms.
 206:.\main.c      ****          */
 207:.\main.c      ****         if((currentTimestamp - previousTimestamp) >= 1000)
 102              		.loc 1 207 0
 103 0028 2B4B     		ldr	r3, .L14
 104 002a 1A68     		ldr	r2, [r3]
 105 002c 2B4B     		ldr	r3, .L14+4
 106 002e 1B68     		ldr	r3, [r3]
 107 0030 D31A     		sub	r3, r2, r3
 108 0032 2B4A     		ldr	r2, .L14+8
 109 0034 9342     		cmp	r3, r2
 110 0036 03D9     		bls	.L5
 208:.\main.c      ****         {
 209:.\main.c      ****             /* Call API defined in BleProcessing.c to send 
 210:.\main.c      ****              * notification over BLE.
 211:.\main.c      ****              */
 212:.\main.c      ****     //        SendHeartRateOverBLE();
 213:.\main.c      ****             
 214:.\main.c      ****             /* Update the previous timestamp with the current timestamp. */
 215:.\main.c      ****             previousTimestamp = currentTimestamp;
 111              		.loc 1 215 0
 112 0038 274B     		ldr	r3, .L14
 113 003a 1A68     		ldr	r2, [r3]
 114 003c 274B     		ldr	r3, .L14+4
 115 003e 1A60     		str	r2, [r3]
 116              	.L5:
 216:.\main.c      ****         }
 217:.\main.c      **** 
 218:.\main.c      ****         /* Try to stay in low power mode until the next watchdog interrupt */
 219:.\main.c      ****         while(WatchdogTimer_GetTimestamp() == currentTimestamp)
 117              		.loc 1 219 0
 118 0040 29E0     		b	.L6
 119              	.L11:
 220:.\main.c      ****         {
 221:.\main.c      ****             /* Process any pending BLE events */
 222:.\main.c      ****             CyBle_ProcessEvents();
 120              		.loc 1 222 0
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccO00fQP.s 			page 7


 121 0042 FFF7FEFF 		bl	CyBle_ProcessEvents
 223:.\main.c      ****             
 224:.\main.c      ****             /* The idea of low power operation is to first request the BLE 
 225:.\main.c      ****              * block go to Deep Sleep, and then check whether it actually
 226:.\main.c      ****              * entered Deep Sleep. This is important because the BLE block
 227:.\main.c      ****              * runs asynchronous to the rest of the application and thus
 228:.\main.c      ****              * could be busy/idle independent of the application state. 
 229:.\main.c      ****              * 
 230:.\main.c      ****              * Once the BLE block is in Deep Sleep, only then the system 
 231:.\main.c      ****              * can enter Deep Sleep. This is important to maintain the BLE 
 232:.\main.c      ****              * connection alive while being in Deep Sleep.
 233:.\main.c      ****              */
 234:.\main.c      **** 
 235:.\main.c      ****             
 236:.\main.c      ****             /* Request the BLE block to enter Deep Sleep */
 237:.\main.c      ****             bleMode = CyBle_EnterLPM(CYBLE_BLESS_DEEPSLEEP);
 122              		.loc 1 237 0
 123 0046 FC1D     		add	r4, r7, #7
 124 0048 0320     		mov	r0, #3
 125 004a FFF7FEFF 		bl	CyBle_EnterLPM
 126 004e 031C     		mov	r3, r0
 127 0050 2370     		strb	r3, [r4]
 238:.\main.c      **** 
 239:.\main.c      ****             
 240:.\main.c      ****             /* Check if the BLE block entered Deep Sleep and if so, then the 
 241:.\main.c      ****              * system can enter Deep Sleep. This is done inside a Critical 
 242:.\main.c      ****              * Section (where global interrupts are disabled) to avoid a 
 243:.\main.c      ****              * race condition between application main (that wants to go to 
 244:.\main.c      ****              * Deep Sleep) and other interrupts (which keep the device from 
 245:.\main.c      ****              * going to Deep Sleep). 
 246:.\main.c      ****              */
 247:.\main.c      ****             interruptStatus = CyEnterCriticalSection();
 128              		.loc 1 247 0
 129 0052 BC1D     		add	r4, r7, #6
 130 0054 FFF7FEFF 		bl	CyEnterCriticalSection
 131 0058 031C     		mov	r3, r0
 132 005a 2370     		strb	r3, [r4]
 248:.\main.c      ****             
 249:.\main.c      ****             /* Check if the BLE block entered Deep Sleep */
 250:.\main.c      ****             if(CYBLE_BLESS_DEEPSLEEP == bleMode)
 133              		.loc 1 250 0
 134 005c FB1D     		add	r3, r7, #7
 135 005e 1B78     		ldrb	r3, [r3]
 136 0060 032B     		cmp	r3, #3
 137 0062 0CD1     		bne	.L7
 251:.\main.c      ****             {
 252:.\main.c      ****                 /* Check the current state of BLE - System can enter Deep Sleep
 253:.\main.c      ****                  * only when the BLE block is starting the ECO (during 
 254:.\main.c      ****                  * pre-processing for a new connection event) or when it is 
 255:.\main.c      ****                  * idle.
 256:.\main.c      ****                  */
 257:.\main.c      ****                 if((CyBle_GetBleSsState() == CYBLE_BLESS_STATE_ECO_ON) ||
 138              		.loc 1 257 0
 139 0064 FFF7FEFF 		bl	CyBle_GetBleSsState
 140 0068 031E     		sub	r3, r0, #0
 141 006a 042B     		cmp	r3, #4
 142 006c 04D0     		beq	.L8
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccO00fQP.s 			page 8


 258:.\main.c      ****                    (CyBle_GetBleSsState() == CYBLE_BLESS_STATE_DEEPSLEEP))
 143              		.loc 1 258 0 discriminator 1
 144 006e FFF7FEFF 		bl	CyBle_GetBleSsState
 145 0072 031E     		sub	r3, r0, #0
 257:.\main.c      ****                    (CyBle_GetBleSsState() == CYBLE_BLESS_STATE_DEEPSLEEP))
 146              		.loc 1 257 0 discriminator 1
 147 0074 062B     		cmp	r3, #6
 148 0076 09D1     		bne	.L10
 149              	.L8:
 259:.\main.c      ****                 {
 260:.\main.c      ****                     CySysPmDeepSleep();
 150              		.loc 1 260 0
 151 0078 FFF7FEFF 		bl	CySysPmDeepSleep
 152 007c 06E0     		b	.L10
 153              	.L7:
 261:.\main.c      ****                 }
 262:.\main.c      ****             }
 263:.\main.c      ****             /* The else condition signifies that the BLE block cannot enter 
 264:.\main.c      ****              * Deep Sleep and is in Active mode.  
 265:.\main.c      ****              */
 266:.\main.c      ****             else
 267:.\main.c      ****             {
 268:.\main.c      ****                 /* At this point, the CPU can enter Sleep, but Deep Sleep is not
 269:.\main.c      ****                  * allowed. 
 270:.\main.c      ****                  * There is one exception - at a connection event, when the BLE 
 271:.\main.c      ****                  * Rx/Tx has just finished, and the post processing for the 
 272:.\main.c      ****                  * connection event is ongoing, the CPU cannot go to sleep.
 273:.\main.c      ****                  * The CPU should wait in Active mode until the post processing 
 274:.\main.c      ****                  * is complete while continuously polling the BLE low power 
 275:.\main.c      ****                  * entry. As soon as post processing is complete, the BLE block 
 276:.\main.c      ****                  * would enter Deep Sleep (because of the polling) and the 
 277:.\main.c      ****                  * system Deep Sleep would then be entered. Deep Sleep is the 
 278:.\main.c      ****                  * preferred low power mode since it takes much lesser current.
 279:.\main.c      ****                  */
 280:.\main.c      ****                 if(CyBle_GetBleSsState() != CYBLE_BLESS_STATE_EVENT_CLOSE)
 154              		.loc 1 280 0
 155 007e FFF7FEFF 		bl	CyBle_GetBleSsState
 156 0082 031E     		sub	r3, r0, #0
 157 0084 022B     		cmp	r3, #2
 158 0086 01D0     		beq	.L10
 281:.\main.c      ****                 {
 282:.\main.c      ****                     CySysPmSleep();
 159              		.loc 1 282 0
 160 0088 FFF7FEFF 		bl	CySysPmSleep
 161              	.L10:
 283:.\main.c      ****                 }
 284:.\main.c      ****             }
 285:.\main.c      ****             
 286:.\main.c      ****             /* Exit Critical section - Global interrupts are enabled again */
 287:.\main.c      ****             CyExitCriticalSection(interruptStatus);
 162              		.loc 1 287 0
 163 008c BB1D     		add	r3, r7, #6
 164 008e 1B78     		ldrb	r3, [r3]
 165 0090 181C     		mov	r0, r3
 166 0092 FFF7FEFF 		bl	CyExitCriticalSection
 167              	.L6:
 219:.\main.c      ****         {
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccO00fQP.s 			page 9


 168              		.loc 1 219 0
 169 0096 FFF7FEFF 		bl	WatchdogTimer_GetTimestamp
 170 009a 021E     		sub	r2, r0, #0
 171 009c 0E4B     		ldr	r3, .L14
 172 009e 1B68     		ldr	r3, [r3]
 173 00a0 9A42     		cmp	r2, r3
 174 00a2 CED0     		beq	.L11
 288:.\main.c      ****         }
 289:.\main.c      **** 
 290:.\main.c      ****         /* Hibernate entry point - Hibernate is entered upon a BLE disconnect
 291:.\main.c      ****          * event or advertisement timeout. Wakeup happens via SW2 switch press, 
 292:.\main.c      ****          * upon which the execution starts from the first line of code. 
 293:.\main.c      ****          * The I/O state, RAM and UDBs are retained during Hibernate.
 294:.\main.c      ****          */
 295:.\main.c      ****         if(enterHibernateFlag)
 175              		.loc 1 295 0
 176 00a4 0F4B     		ldr	r3, .L14+12
 177 00a6 1B78     		ldrb	r3, [r3]
 178 00a8 002B     		cmp	r3, #0
 179 00aa 13D0     		beq	.L12
 296:.\main.c      ****         {
 297:.\main.c      ****             /* Stop the BLE component */
 298:.\main.c      ****             CyBle_Stop();
 180              		.loc 1 298 0
 181 00ac FFF7FEFF 		bl	CyBle_Stop
 299:.\main.c      ****             
 300:.\main.c      ****             /* Enable the Hibernate wakeup functionality */
 301:.\main.c      ****             SW2_Switch_ClearInterrupt();
 182              		.loc 1 301 0
 183 00b0 FFF7FEFF 		bl	SW2_Switch_ClearInterrupt
 302:.\main.c      ****             Wakeup_ISR_Start();
 184              		.loc 1 302 0
 185 00b4 FFF7FEFF 		bl	Wakeup_ISR_Start
 303:.\main.c      ****             
 304:.\main.c      ****             #if (RGB_LED_IN_PROJECT)
 305:.\main.c      ****                 /* Turn off Green and Blue LEDs to indicate Hibernate */
 306:.\main.c      ****                 Led_Advertising_Green_Write(1);
 186              		.loc 1 306 0
 187 00b8 0120     		mov	r0, #1
 188 00ba FFF7FEFF 		bl	Led_Advertising_Green_Write
 307:.\main.c      ****                 Led_Connected_Blue_Write(1);
 189              		.loc 1 307 0
 190 00be 0120     		mov	r0, #1
 191 00c0 FFF7FEFF 		bl	Led_Connected_Blue_Write
 308:.\main.c      ****                 
 309:.\main.c      ****                 /* Change the GPIO state to High-Z */
 310:.\main.c      ****                 Led_Advertising_Green_SetDriveMode(Led_Advertising_Green_DM_ALG_HIZ);
 192              		.loc 1 310 0
 193 00c4 0020     		mov	r0, #0
 194 00c6 FFF7FEFF 		bl	Led_Advertising_Green_SetDriveMode
 311:.\main.c      ****                 Led_Connected_Blue_SetDriveMode(Led_Connected_Blue_DM_ALG_HIZ);
 195              		.loc 1 311 0
 196 00ca 0020     		mov	r0, #0
 197 00cc FFF7FEFF 		bl	Led_Connected_Blue_SetDriveMode
 312:.\main.c      ****             #endif  /* #if (RGB_LED_IN_PROJECT) */
 313:.\main.c      ****             
 314:.\main.c      ****             /* Enter hibernate mode */
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccO00fQP.s 			page 10


 315:.\main.c      ****             CySysPmHibernate();
 198              		.loc 1 315 0
 199 00d0 FFF7FEFF 		bl	CySysPmHibernate
 200              	.L12:
 316:.\main.c      ****         }
 317:.\main.c      ****     }
 201              		.loc 1 317 0
 202 00d4 99E7     		b	.L13
 203              	.L15:
 204 00d6 C046     		.align	2
 205              	.L14:
 206 00d8 00000000 		.word	currentTimestamp.6899
 207 00dc 04000000 		.word	previousTimestamp.6898
 208 00e0 E7030000 		.word	999
 209 00e4 00000000 		.word	enterHibernateFlag
 210              		.cfi_endproc
 211              	.LFE38:
 212              		.size	main, .-main
 213              		.bss
 214              		.align	2
 215              	currentTimestamp.6899:
 216 0000 00000000 		.space	4
 217              		.align	2
 218              	previousTimestamp.6898:
 219 0004 00000000 		.space	4
 220              		.text
 221              	.Letext0:
 222              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 223              		.file 3 "Generated_Source\\PSoC4/BLE_Stack.h"
 224              		.file 4 ".\\BleProcessing.h"
 225              		.section	.debug_info,"",%progbits
 226              	.Ldebug_info0:
 227 0000 87010000 		.4byte	0x187
 228 0004 0400     		.2byte	0x4
 229 0006 00000000 		.4byte	.Ldebug_abbrev0
 230 000a 04       		.byte	0x4
 231 000b 01       		.uleb128 0x1
 232 000c 14010000 		.4byte	.LASF34
 233 0010 01       		.byte	0x1
 234 0011 A5000000 		.4byte	.LASF35
 235 0015 A2020000 		.4byte	.LASF36
 236 0019 00000000 		.4byte	.Ldebug_ranges0+0
 237 001d 00000000 		.4byte	0
 238 0021 00000000 		.4byte	.Ldebug_line0
 239 0025 02       		.uleb128 0x2
 240 0026 01       		.byte	0x1
 241 0027 06       		.byte	0x6
 242 0028 13030000 		.4byte	.LASF0
 243 002c 02       		.uleb128 0x2
 244 002d 01       		.byte	0x1
 245 002e 08       		.byte	0x8
 246 002f 97000000 		.4byte	.LASF1
 247 0033 02       		.uleb128 0x2
 248 0034 02       		.byte	0x2
 249 0035 05       		.byte	0x5
 250 0036 98020000 		.4byte	.LASF2
 251 003a 02       		.uleb128 0x2
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccO00fQP.s 			page 11


 252 003b 02       		.byte	0x2
 253 003c 07       		.byte	0x7
 254 003d 3D000000 		.4byte	.LASF3
 255 0041 02       		.uleb128 0x2
 256 0042 04       		.byte	0x4
 257 0043 05       		.byte	0x5
 258 0044 F9020000 		.4byte	.LASF4
 259 0048 02       		.uleb128 0x2
 260 0049 04       		.byte	0x4
 261 004a 07       		.byte	0x7
 262 004b AE000000 		.4byte	.LASF5
 263 004f 02       		.uleb128 0x2
 264 0050 08       		.byte	0x8
 265 0051 05       		.byte	0x5
 266 0052 41020000 		.4byte	.LASF6
 267 0056 02       		.uleb128 0x2
 268 0057 08       		.byte	0x8
 269 0058 07       		.byte	0x7
 270 0059 80000000 		.4byte	.LASF7
 271 005d 03       		.uleb128 0x3
 272 005e 04       		.byte	0x4
 273 005f 05       		.byte	0x5
 274 0060 696E7400 		.ascii	"int\000"
 275 0064 02       		.uleb128 0x2
 276 0065 04       		.byte	0x4
 277 0066 07       		.byte	0x7
 278 0067 C5010000 		.4byte	.LASF8
 279 006b 04       		.uleb128 0x4
 280 006c C0000000 		.4byte	.LASF9
 281 0070 02       		.byte	0x2
 282 0071 9801     		.2byte	0x198
 283 0073 2C000000 		.4byte	0x2c
 284 0077 04       		.uleb128 0x4
 285 0078 A2010000 		.4byte	.LASF10
 286 007c 02       		.byte	0x2
 287 007d 9A01     		.2byte	0x19a
 288 007f 48000000 		.4byte	0x48
 289 0083 02       		.uleb128 0x2
 290 0084 04       		.byte	0x4
 291 0085 04       		.byte	0x4
 292 0086 7A000000 		.4byte	.LASF11
 293 008a 02       		.uleb128 0x2
 294 008b 08       		.byte	0x8
 295 008c 04       		.byte	0x4
 296 008d 08010000 		.4byte	.LASF12
 297 0091 02       		.uleb128 0x2
 298 0092 01       		.byte	0x1
 299 0093 08       		.byte	0x8
 300 0094 D2010000 		.4byte	.LASF13
 301 0098 02       		.uleb128 0x2
 302 0099 04       		.byte	0x4
 303 009a 07       		.byte	0x7
 304 009b 38020000 		.4byte	.LASF14
 305 009f 05       		.uleb128 0x5
 306 00a0 01       		.byte	0x1
 307 00a1 03       		.byte	0x3
 308 00a2 6F03     		.2byte	0x36f
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccO00fQP.s 			page 12


 309 00a4 C8000000 		.4byte	0xc8
 310 00a8 06       		.uleb128 0x6
 311 00a9 1F030000 		.4byte	.LASF15
 312 00ad 01       		.sleb128 1
 313 00ae 06       		.uleb128 0x6
 314 00af 19000000 		.4byte	.LASF16
 315 00b3 02       		.sleb128 2
 316 00b4 06       		.uleb128 0x6
 317 00b5 D7010000 		.4byte	.LASF17
 318 00b9 03       		.sleb128 3
 319 00ba 06       		.uleb128 0x6
 320 00bb F2000000 		.4byte	.LASF18
 321 00bf 04       		.sleb128 4
 322 00c0 06       		.uleb128 0x6
 323 00c1 C6000000 		.4byte	.LASF19
 324 00c5 FF01     		.sleb128 255
 325 00c7 00       		.byte	0
 326 00c8 04       		.uleb128 0x4
 327 00c9 E9020000 		.4byte	.LASF20
 328 00cd 03       		.byte	0x3
 329 00ce 8B03     		.2byte	0x38b
 330 00d0 9F000000 		.4byte	0x9f
 331 00d4 05       		.uleb128 0x5
 332 00d5 01       		.byte	0x1
 333 00d6 03       		.byte	0x3
 334 00d7 8F03     		.2byte	0x38f
 335 00d9 0F010000 		.4byte	0x10f
 336 00dd 06       		.uleb128 0x6
 337 00de 00000000 		.4byte	.LASF21
 338 00e2 01       		.sleb128 1
 339 00e3 06       		.uleb128 0x6
 340 00e4 ED010000 		.4byte	.LASF22
 341 00e8 02       		.sleb128 2
 342 00e9 06       		.uleb128 0x6
 343 00ea DA000000 		.4byte	.LASF23
 344 00ee 03       		.sleb128 3
 345 00ef 06       		.uleb128 0x6
 346 00f0 50000000 		.4byte	.LASF24
 347 00f4 04       		.sleb128 4
 348 00f5 06       		.uleb128 0x6
 349 00f6 7B020000 		.4byte	.LASF25
 350 00fa 05       		.sleb128 5
 351 00fb 06       		.uleb128 0x6
 352 00fc 4F020000 		.4byte	.LASF26
 353 0100 06       		.sleb128 6
 354 0101 06       		.uleb128 0x6
 355 0102 A9010000 		.4byte	.LASF27
 356 0106 07       		.sleb128 7
 357 0107 06       		.uleb128 0x6
 358 0108 1E020000 		.4byte	.LASF28
 359 010c FF01     		.sleb128 255
 360 010e 00       		.byte	0
 361 010f 07       		.uleb128 0x7
 362 0110 69000000 		.4byte	.LASF37
 363 0114 01       		.byte	0x1
 364 0115 63       		.byte	0x63
 365 0116 00000000 		.4byte	.LFB37
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccO00fQP.s 			page 13


 366 011a 30000000 		.4byte	.LFE37-.LFB37
 367 011e 01       		.uleb128 0x1
 368 011f 9C       		.byte	0x9c
 369 0120 08       		.uleb128 0x8
 370 0121 0F010000 		.4byte	.LASF38
 371 0125 01       		.byte	0x1
 372 0126 9C       		.byte	0x9c
 373 0127 5D000000 		.4byte	0x5d
 374 012b 00000000 		.4byte	.LFB38
 375 012f E8000000 		.4byte	.LFE38-.LFB38
 376 0133 01       		.uleb128 0x1
 377 0134 9C       		.byte	0x9c
 378 0135 78010000 		.4byte	0x178
 379 0139 09       		.uleb128 0x9
 380 013a 2B000000 		.4byte	.LASF29
 381 013e 01       		.byte	0x1
 382 013f 9E       		.byte	0x9e
 383 0140 77000000 		.4byte	0x77
 384 0144 05       		.uleb128 0x5
 385 0145 03       		.byte	0x3
 386 0146 04000000 		.4byte	previousTimestamp.6898
 387 014a 09       		.uleb128 0x9
 388 014b 02030000 		.4byte	.LASF30
 389 014f 01       		.byte	0x1
 390 0150 9F       		.byte	0x9f
 391 0151 77000000 		.4byte	0x77
 392 0155 05       		.uleb128 0x5
 393 0156 03       		.byte	0x3
 394 0157 00000000 		.4byte	currentTimestamp.6899
 395 015b 09       		.uleb128 0x9
 396 015c 38030000 		.4byte	.LASF31
 397 0160 01       		.byte	0x1
 398 0161 A0       		.byte	0xa0
 399 0162 C8000000 		.4byte	0xc8
 400 0166 02       		.uleb128 0x2
 401 0167 91       		.byte	0x91
 402 0168 6F       		.sleb128 -17
 403 0169 09       		.uleb128 0x9
 404 016a 6B020000 		.4byte	.LASF32
 405 016e 01       		.byte	0x1
 406 016f A1       		.byte	0xa1
 407 0170 6B000000 		.4byte	0x6b
 408 0174 02       		.uleb128 0x2
 409 0175 91       		.byte	0x91
 410 0176 6E       		.sleb128 -18
 411 0177 00       		.byte	0
 412 0178 0A       		.uleb128 0xa
 413 0179 0B020000 		.4byte	.LASF39
 414 017d 04       		.byte	0x4
 415 017e 44       		.byte	0x44
 416 017f 83010000 		.4byte	0x183
 417 0183 02       		.uleb128 0x2
 418 0184 01       		.byte	0x1
 419 0185 02       		.byte	0x2
 420 0186 32030000 		.4byte	.LASF33
 421 018a 00       		.byte	0
 422              		.section	.debug_abbrev,"",%progbits
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccO00fQP.s 			page 14


 423              	.Ldebug_abbrev0:
 424 0000 01       		.uleb128 0x1
 425 0001 11       		.uleb128 0x11
 426 0002 01       		.byte	0x1
 427 0003 25       		.uleb128 0x25
 428 0004 0E       		.uleb128 0xe
 429 0005 13       		.uleb128 0x13
 430 0006 0B       		.uleb128 0xb
 431 0007 03       		.uleb128 0x3
 432 0008 0E       		.uleb128 0xe
 433 0009 1B       		.uleb128 0x1b
 434 000a 0E       		.uleb128 0xe
 435 000b 55       		.uleb128 0x55
 436 000c 17       		.uleb128 0x17
 437 000d 11       		.uleb128 0x11
 438 000e 01       		.uleb128 0x1
 439 000f 10       		.uleb128 0x10
 440 0010 17       		.uleb128 0x17
 441 0011 00       		.byte	0
 442 0012 00       		.byte	0
 443 0013 02       		.uleb128 0x2
 444 0014 24       		.uleb128 0x24
 445 0015 00       		.byte	0
 446 0016 0B       		.uleb128 0xb
 447 0017 0B       		.uleb128 0xb
 448 0018 3E       		.uleb128 0x3e
 449 0019 0B       		.uleb128 0xb
 450 001a 03       		.uleb128 0x3
 451 001b 0E       		.uleb128 0xe
 452 001c 00       		.byte	0
 453 001d 00       		.byte	0
 454 001e 03       		.uleb128 0x3
 455 001f 24       		.uleb128 0x24
 456 0020 00       		.byte	0
 457 0021 0B       		.uleb128 0xb
 458 0022 0B       		.uleb128 0xb
 459 0023 3E       		.uleb128 0x3e
 460 0024 0B       		.uleb128 0xb
 461 0025 03       		.uleb128 0x3
 462 0026 08       		.uleb128 0x8
 463 0027 00       		.byte	0
 464 0028 00       		.byte	0
 465 0029 04       		.uleb128 0x4
 466 002a 16       		.uleb128 0x16
 467 002b 00       		.byte	0
 468 002c 03       		.uleb128 0x3
 469 002d 0E       		.uleb128 0xe
 470 002e 3A       		.uleb128 0x3a
 471 002f 0B       		.uleb128 0xb
 472 0030 3B       		.uleb128 0x3b
 473 0031 05       		.uleb128 0x5
 474 0032 49       		.uleb128 0x49
 475 0033 13       		.uleb128 0x13
 476 0034 00       		.byte	0
 477 0035 00       		.byte	0
 478 0036 05       		.uleb128 0x5
 479 0037 04       		.uleb128 0x4
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccO00fQP.s 			page 15


 480 0038 01       		.byte	0x1
 481 0039 0B       		.uleb128 0xb
 482 003a 0B       		.uleb128 0xb
 483 003b 3A       		.uleb128 0x3a
 484 003c 0B       		.uleb128 0xb
 485 003d 3B       		.uleb128 0x3b
 486 003e 05       		.uleb128 0x5
 487 003f 01       		.uleb128 0x1
 488 0040 13       		.uleb128 0x13
 489 0041 00       		.byte	0
 490 0042 00       		.byte	0
 491 0043 06       		.uleb128 0x6
 492 0044 28       		.uleb128 0x28
 493 0045 00       		.byte	0
 494 0046 03       		.uleb128 0x3
 495 0047 0E       		.uleb128 0xe
 496 0048 1C       		.uleb128 0x1c
 497 0049 0D       		.uleb128 0xd
 498 004a 00       		.byte	0
 499 004b 00       		.byte	0
 500 004c 07       		.uleb128 0x7
 501 004d 2E       		.uleb128 0x2e
 502 004e 00       		.byte	0
 503 004f 03       		.uleb128 0x3
 504 0050 0E       		.uleb128 0xe
 505 0051 3A       		.uleb128 0x3a
 506 0052 0B       		.uleb128 0xb
 507 0053 3B       		.uleb128 0x3b
 508 0054 0B       		.uleb128 0xb
 509 0055 27       		.uleb128 0x27
 510 0056 19       		.uleb128 0x19
 511 0057 11       		.uleb128 0x11
 512 0058 01       		.uleb128 0x1
 513 0059 12       		.uleb128 0x12
 514 005a 06       		.uleb128 0x6
 515 005b 40       		.uleb128 0x40
 516 005c 18       		.uleb128 0x18
 517 005d 9642     		.uleb128 0x2116
 518 005f 19       		.uleb128 0x19
 519 0060 00       		.byte	0
 520 0061 00       		.byte	0
 521 0062 08       		.uleb128 0x8
 522 0063 2E       		.uleb128 0x2e
 523 0064 01       		.byte	0x1
 524 0065 3F       		.uleb128 0x3f
 525 0066 19       		.uleb128 0x19
 526 0067 03       		.uleb128 0x3
 527 0068 0E       		.uleb128 0xe
 528 0069 3A       		.uleb128 0x3a
 529 006a 0B       		.uleb128 0xb
 530 006b 3B       		.uleb128 0x3b
 531 006c 0B       		.uleb128 0xb
 532 006d 49       		.uleb128 0x49
 533 006e 13       		.uleb128 0x13
 534 006f 11       		.uleb128 0x11
 535 0070 01       		.uleb128 0x1
 536 0071 12       		.uleb128 0x12
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccO00fQP.s 			page 16


 537 0072 06       		.uleb128 0x6
 538 0073 40       		.uleb128 0x40
 539 0074 18       		.uleb128 0x18
 540 0075 9642     		.uleb128 0x2116
 541 0077 19       		.uleb128 0x19
 542 0078 01       		.uleb128 0x1
 543 0079 13       		.uleb128 0x13
 544 007a 00       		.byte	0
 545 007b 00       		.byte	0
 546 007c 09       		.uleb128 0x9
 547 007d 34       		.uleb128 0x34
 548 007e 00       		.byte	0
 549 007f 03       		.uleb128 0x3
 550 0080 0E       		.uleb128 0xe
 551 0081 3A       		.uleb128 0x3a
 552 0082 0B       		.uleb128 0xb
 553 0083 3B       		.uleb128 0x3b
 554 0084 0B       		.uleb128 0xb
 555 0085 49       		.uleb128 0x49
 556 0086 13       		.uleb128 0x13
 557 0087 02       		.uleb128 0x2
 558 0088 18       		.uleb128 0x18
 559 0089 00       		.byte	0
 560 008a 00       		.byte	0
 561 008b 0A       		.uleb128 0xa
 562 008c 34       		.uleb128 0x34
 563 008d 00       		.byte	0
 564 008e 03       		.uleb128 0x3
 565 008f 0E       		.uleb128 0xe
 566 0090 3A       		.uleb128 0x3a
 567 0091 0B       		.uleb128 0xb
 568 0092 3B       		.uleb128 0x3b
 569 0093 0B       		.uleb128 0xb
 570 0094 49       		.uleb128 0x49
 571 0095 13       		.uleb128 0x13
 572 0096 3F       		.uleb128 0x3f
 573 0097 19       		.uleb128 0x19
 574 0098 3C       		.uleb128 0x3c
 575 0099 19       		.uleb128 0x19
 576 009a 00       		.byte	0
 577 009b 00       		.byte	0
 578 009c 00       		.byte	0
 579              		.section	.debug_aranges,"",%progbits
 580 0000 24000000 		.4byte	0x24
 581 0004 0200     		.2byte	0x2
 582 0006 00000000 		.4byte	.Ldebug_info0
 583 000a 04       		.byte	0x4
 584 000b 00       		.byte	0
 585 000c 0000     		.2byte	0
 586 000e 0000     		.2byte	0
 587 0010 00000000 		.4byte	.LFB37
 588 0014 30000000 		.4byte	.LFE37-.LFB37
 589 0018 00000000 		.4byte	.LFB38
 590 001c E8000000 		.4byte	.LFE38-.LFB38
 591 0020 00000000 		.4byte	0
 592 0024 00000000 		.4byte	0
 593              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccO00fQP.s 			page 17


 594              	.Ldebug_ranges0:
 595 0000 00000000 		.4byte	.LFB37
 596 0004 30000000 		.4byte	.LFE37
 597 0008 00000000 		.4byte	.LFB38
 598 000c E8000000 		.4byte	.LFE38
 599 0010 00000000 		.4byte	0
 600 0014 00000000 		.4byte	0
 601              		.section	.debug_line,"",%progbits
 602              	.Ldebug_line0:
 603 0000 CB000000 		.section	.debug_str,"MS",%progbits,1
 603      02006700 
 603      00000201 
 603      FB0E0D00 
 603      01010101 
 604              	.LASF21:
 605 0000 4359424C 		.ascii	"CYBLE_BLESS_STATE_ACTIVE\000"
 605      455F424C 
 605      4553535F 
 605      53544154 
 605      455F4143 
 606              	.LASF16:
 607 0019 4359424C 		.ascii	"CYBLE_BLESS_SLEEP\000"
 607      455F424C 
 607      4553535F 
 607      534C4545 
 607      5000
 608              	.LASF29:
 609 002b 70726576 		.ascii	"previousTimestamp\000"
 609      696F7573 
 609      54696D65 
 609      7374616D 
 609      7000
 610              	.LASF3:
 611 003d 73686F72 		.ascii	"short unsigned int\000"
 611      7420756E 
 611      7369676E 
 611      65642069 
 611      6E7400
 612              	.LASF24:
 613 0050 4359424C 		.ascii	"CYBLE_BLESS_STATE_ECO_ON\000"
 613      455F424C 
 613      4553535F 
 613      53544154 
 613      455F4543 
 614              	.LASF37:
 615 0069 496E6974 		.ascii	"InitializeSystem\000"
 615      69616C69 
 615      7A655379 
 615      7374656D 
 615      00
 616              	.LASF11:
 617 007a 666C6F61 		.ascii	"float\000"
 617      7400
 618              	.LASF7:
 619 0080 6C6F6E67 		.ascii	"long long unsigned int\000"
 619      206C6F6E 
 619      6720756E 
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccO00fQP.s 			page 18


 619      7369676E 
 619      65642069 
 620              	.LASF1:
 621 0097 756E7369 		.ascii	"unsigned char\000"
 621      676E6564 
 621      20636861 
 621      7200
 622              	.LASF35:
 623 00a5 2E5C6D61 		.ascii	".\\main.c\000"
 623      696E2E63 
 623      00
 624              	.LASF5:
 625 00ae 6C6F6E67 		.ascii	"long unsigned int\000"
 625      20756E73 
 625      69676E65 
 625      6420696E 
 625      7400
 626              	.LASF9:
 627 00c0 75696E74 		.ascii	"uint8\000"
 627      3800
 628              	.LASF19:
 629 00c6 4359424C 		.ascii	"CYBLE_BLESS_INVALID\000"
 629      455F424C 
 629      4553535F 
 629      494E5641 
 629      4C494400 
 630              	.LASF23:
 631 00da 4359424C 		.ascii	"CYBLE_BLESS_STATE_SLEEP\000"
 631      455F424C 
 631      4553535F 
 631      53544154 
 631      455F534C 
 632              	.LASF18:
 633 00f2 4359424C 		.ascii	"CYBLE_BLESS_HIBERNATE\000"
 633      455F424C 
 633      4553535F 
 633      48494245 
 633      524E4154 
 634              	.LASF12:
 635 0108 646F7562 		.ascii	"double\000"
 635      6C6500
 636              	.LASF38:
 637 010f 6D61696E 		.ascii	"main\000"
 637      00
 638              	.LASF34:
 639 0114 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 639      4320342E 
 639      392E3320 
 639      32303135 
 639      30333033 
 640 0147 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 640      20726576 
 640      6973696F 
 640      6E203232 
 640      31323230 
 641 017a 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 641      66756E63 
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccO00fQP.s 			page 19


 641      74696F6E 
 641      2D736563 
 641      74696F6E 
 642              	.LASF10:
 643 01a2 75696E74 		.ascii	"uint32\000"
 643      333200
 644              	.LASF27:
 645 01a9 4359424C 		.ascii	"CYBLE_BLESS_STATE_HIBERNATE\000"
 645      455F424C 
 645      4553535F 
 645      53544154 
 645      455F4849 
 646              	.LASF8:
 647 01c5 756E7369 		.ascii	"unsigned int\000"
 647      676E6564 
 647      20696E74 
 647      00
 648              	.LASF13:
 649 01d2 63686172 		.ascii	"char\000"
 649      00
 650              	.LASF17:
 651 01d7 4359424C 		.ascii	"CYBLE_BLESS_DEEPSLEEP\000"
 651      455F424C 
 651      4553535F 
 651      44454550 
 651      534C4545 
 652              	.LASF22:
 653 01ed 4359424C 		.ascii	"CYBLE_BLESS_STATE_EVENT_CLOSE\000"
 653      455F424C 
 653      4553535F 
 653      53544154 
 653      455F4556 
 654              	.LASF39:
 655 020b 656E7465 		.ascii	"enterHibernateFlag\000"
 655      72486962 
 655      65726E61 
 655      7465466C 
 655      616700
 656              	.LASF28:
 657 021e 4359424C 		.ascii	"CYBLE_BLESS_STATE_INVALID\000"
 657      455F424C 
 657      4553535F 
 657      53544154 
 657      455F494E 
 658              	.LASF14:
 659 0238 73697A65 		.ascii	"sizetype\000"
 659      74797065 
 659      00
 660              	.LASF6:
 661 0241 6C6F6E67 		.ascii	"long long int\000"
 661      206C6F6E 
 661      6720696E 
 661      7400
 662              	.LASF26:
 663 024f 4359424C 		.ascii	"CYBLE_BLESS_STATE_DEEPSLEEP\000"
 663      455F424C 
 663      4553535F 
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccO00fQP.s 			page 20


 663      53544154 
 663      455F4445 
 664              	.LASF32:
 665 026b 696E7465 		.ascii	"interruptStatus\000"
 665      72727570 
 665      74537461 
 665      74757300 
 666              	.LASF25:
 667 027b 4359424C 		.ascii	"CYBLE_BLESS_STATE_ECO_STABLE\000"
 667      455F424C 
 667      4553535F 
 667      53544154 
 667      455F4543 
 668              	.LASF2:
 669 0298 73686F72 		.ascii	"short int\000"
 669      7420696E 
 669      7400
 670              	.LASF36:
 671 02a2 433A5C55 		.ascii	"C:\\Users\\Rohit\\Documents\\ALL DESKTOP JUNK\\9047"
 671      73657273 
 671      5C526F68 
 671      69745C44 
 671      6F63756D 
 672 02d0 2D2D2D4C 		.ascii	"---Lab-2---group-7.cydsn\000"
 672      61622D32 
 672      2D2D2D67 
 672      726F7570 
 672      2D372E63 
 673              	.LASF20:
 674 02e9 4359424C 		.ascii	"CYBLE_LP_MODE_T\000"
 674      455F4C50 
 674      5F4D4F44 
 674      455F5400 
 675              	.LASF4:
 676 02f9 6C6F6E67 		.ascii	"long int\000"
 676      20696E74 
 676      00
 677              	.LASF30:
 678 0302 63757272 		.ascii	"currentTimestamp\000"
 678      656E7454 
 678      696D6573 
 678      74616D70 
 678      00
 679              	.LASF0:
 680 0313 7369676E 		.ascii	"signed char\000"
 680      65642063 
 680      68617200 
 681              	.LASF15:
 682 031f 4359424C 		.ascii	"CYBLE_BLESS_ACTIVE\000"
 682      455F424C 
 682      4553535F 
 682      41435449 
 682      564500
 683              	.LASF33:
 684 0332 5F426F6F 		.ascii	"_Bool\000"
 684      6C00
 685              	.LASF31:
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccO00fQP.s 			page 21


 686 0338 626C654D 		.ascii	"bleMode\000"
 686      6F646500 
 687              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
