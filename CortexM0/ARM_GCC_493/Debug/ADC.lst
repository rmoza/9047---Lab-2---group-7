ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	ADC_initVar
  18              		.bss
  19              		.type	ADC_initVar, %object
  20              		.size	ADC_initVar, 1
  21              	ADC_initVar:
  22 0000 00       		.space	1
  23              		.comm	ADC_offset,2,4
  24              		.comm	ADC_countsPer10Volt,4,4
  25              		.section	.rodata
  26              		.align	2
  27              		.type	ADC_channelsConfig, %object
  28              		.size	ADC_channelsConfig, 4
  29              	ADC_channelsConfig:
  30 0000 00000000 		.space	4
  31              		.section	.text.ADC_Start,"ax",%progbits
  32              		.align	2
  33              		.global	ADC_Start
  34              		.code	16
  35              		.thumb_func
  36              		.type	ADC_Start, %function
  37              	ADC_Start:
  38              	.LFB2:
  39              		.file 1 ".\\Generated_Source\\PSoC4\\ADC.c"
   1:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:.\Generated_Source\PSoC4/ADC.c **** * Version 2.40
   4:.\Generated_Source\PSoC4/ADC.c **** *
   5:.\Generated_Source\PSoC4/ADC.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC.c **** *
   9:.\Generated_Source\PSoC4/ADC.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC.c **** *
  11:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC.c **** 
  18:.\Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 2


  19:.\Generated_Source\PSoC4/ADC.c **** 
  20:.\Generated_Source\PSoC4/ADC.c **** 
  21:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:.\Generated_Source\PSoC4/ADC.c **** 
  28:.\Generated_Source\PSoC4/ADC.c **** 
  29:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:.\Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  33:.\Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000000u };
  34:.\Generated_Source\PSoC4/ADC.c **** 
  35:.\Generated_Source\PSoC4/ADC.c **** 
  36:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/ADC.c **** *
  40:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  41:.\Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/ADC.c **** *
  45:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:.\Generated_Source\PSoC4/ADC.c **** *  None.
  47:.\Generated_Source\PSoC4/ADC.c **** *
  48:.\Generated_Source\PSoC4/ADC.c **** * Return:
  49:.\Generated_Source\PSoC4/ADC.c **** *  None.
  50:.\Generated_Source\PSoC4/ADC.c **** *
  51:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:.\Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:.\Generated_Source\PSoC4/ADC.c **** *
  62:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:.\Generated_Source\PSoC4/ADC.c **** {
  40              		.loc 1 64 0
  41              		.cfi_startproc
  42 0000 80B5     		push	{r7, lr}
  43              		.cfi_def_cfa_offset 8
  44              		.cfi_offset 7, -8
  45              		.cfi_offset 14, -4
  46 0002 00AF     		add	r7, sp, #0
  47              		.cfi_def_cfa_register 7
  65:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  48              		.loc 1 66 0
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 3


  49 0004 064B     		ldr	r3, .L3
  50 0006 1B78     		ldrb	r3, [r3]
  51 0008 002B     		cmp	r3, #0
  52 000a 04D1     		bne	.L2
  67:.\Generated_Source\PSoC4/ADC.c ****     {
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  53              		.loc 1 68 0
  54 000c FFF7FEFF 		bl	ADC_Init
  69:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  55              		.loc 1 69 0
  56 0010 034B     		ldr	r3, .L3
  57 0012 0122     		mov	r2, #1
  58 0014 1A70     		strb	r2, [r3]
  59              	.L2:
  70:.\Generated_Source\PSoC4/ADC.c ****     }
  71:.\Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  60              		.loc 1 71 0
  61 0016 FFF7FEFF 		bl	ADC_Enable
  72:.\Generated_Source\PSoC4/ADC.c **** }
  62              		.loc 1 72 0
  63 001a BD46     		mov	sp, r7
  64              		@ sp needed
  65 001c 80BD     		pop	{r7, pc}
  66              	.L4:
  67 001e C046     		.align	2
  68              	.L3:
  69 0020 00000000 		.word	ADC_initVar
  70              		.cfi_endproc
  71              	.LFE2:
  72              		.size	ADC_Start, .-ADC_Start
  73              		.section	.text.ADC_Init,"ax",%progbits
  74              		.align	2
  75              		.global	ADC_Init
  76              		.code	16
  77              		.thumb_func
  78              		.type	ADC_Init, %function
  79              	ADC_Init:
  80              	.LFB3:
  73:.\Generated_Source\PSoC4/ADC.c **** 
  74:.\Generated_Source\PSoC4/ADC.c **** 
  75:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/ADC.c **** *
  79:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  80:.\Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:.\Generated_Source\PSoC4/ADC.c **** *
  84:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:.\Generated_Source\PSoC4/ADC.c **** *  None.
  86:.\Generated_Source\PSoC4/ADC.c **** *
  87:.\Generated_Source\PSoC4/ADC.c **** * Return:
  88:.\Generated_Source\PSoC4/ADC.c **** *  None.
  89:.\Generated_Source\PSoC4/ADC.c **** *
  90:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 4


  92:.\Generated_Source\PSoC4/ADC.c **** *
  93:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:.\Generated_Source\PSoC4/ADC.c **** {
  81              		.loc 1 95 0
  82              		.cfi_startproc
  83 0000 80B5     		push	{r7, lr}
  84              		.cfi_def_cfa_offset 8
  85              		.cfi_offset 7, -8
  86              		.cfi_offset 14, -4
  87 0002 84B0     		sub	sp, sp, #16
  88              		.cfi_def_cfa_offset 24
  89 0004 00AF     		add	r7, sp, #0
  90              		.cfi_def_cfa_register 7
  96:.\Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/ADC.c **** 
 100:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/ADC.c ****         {
 103:.\Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 5


 139:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:.\Generated_Source\PSoC4/ADC.c ****         };
 168:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:.\Generated_Source\PSoC4/ADC.c **** 
 170:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:.\Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:.\Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  91              		.loc 1 172 0
  92 0006 0F20     		mov	r0, #15
  93 0008 0321     		mov	r1, #3
  94 000a FFF7FEFF 		bl	CyIntSetPriority
 173:.\Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  95              		.loc 1 173 0
  96 000e 544B     		ldr	r3, .L17
  97 0010 0F20     		mov	r0, #15
  98 0012 191C     		mov	r1, r3
  99 0014 FFF7FEFF 		bl	CyIntSetVector
 174:.\Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:.\Generated_Source\PSoC4/ADC.c **** 
 176:.\Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
 100              		.loc 1 177 0
 101 0018 524B     		ldr	r3, .L17+4
 102 001a 0122     		mov	r2, #1
 103 001c 1A60     		str	r2, [r3]
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:.\Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:.\Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
 104              		.loc 1 180 0
 105 001e 524B     		ldr	r3, .L17+8
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 6


 106 0020 1B68     		ldr	r3, [r3]
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 107              		.loc 1 178 0
 108 0022 002B     		cmp	r3, #0
 109 0024 01DA     		bge	.L6
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 110              		.loc 1 178 0 is_stmt 0 discriminator 1
 111 0026 5149     		ldr	r1, .L17+12
 112 0028 00E0     		b	.L7
 113              	.L6:
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 114              		.loc 1 178 0 discriminator 2
 115 002a 5149     		ldr	r1, .L17+16
 116              	.L7:
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 117              		.loc 1 178 0 discriminator 4
 118 002c 514B     		ldr	r3, .L17+20
 119 002e 514A     		ldr	r2, .L17+20
 120 0030 1268     		ldr	r2, [r2]
 121 0032 0A43     		orr	r2, r1
 122 0034 1A60     		str	r2, [r3]
 181:.\Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
 123              		.loc 1 182 0 is_stmt 1 discriminator 4
 124 0036 504B     		ldr	r3, .L17+24
 125 0038 504A     		ldr	r2, .L17+28
 126 003a 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
 127              		.loc 1 183 0 discriminator 4
 128 003c 504B     		ldr	r3, .L17+32
 129 003e 514A     		ldr	r2, .L17+36
 130 0040 1A60     		str	r2, [r3]
 184:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
 131              		.loc 1 184 0 discriminator 4
 132 0042 514B     		ldr	r3, .L17+40
 133 0044 0022     		mov	r2, #0
 134 0046 1A60     		str	r2, [r3]
 185:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
 135              		.loc 1 185 0 discriminator 4
 136 0048 504B     		ldr	r3, .L17+44
 137 004a 514A     		ldr	r2, .L17+48
 138 004c 1A60     		str	r2, [r3]
 186:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
 139              		.loc 1 186 0 discriminator 4
 140 004e 514B     		ldr	r3, .L17+52
 141 0050 4F4A     		ldr	r2, .L17+48
 142 0052 1A60     		str	r2, [r3]
 187:.\Generated_Source\PSoC4/ADC.c ****     
 188:.\Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:.\Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
 143              		.loc 1 190 0 discriminator 4
 144 0054 504B     		ldr	r3, .L17+56
 145 0056 504A     		ldr	r2, .L17+56
 146 0058 1268     		ldr	r2, [r2]
 147 005a 8021     		mov	r1, #128
 148 005c 4902     		lsl	r1, r1, #9
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 7


 149 005e 0A43     		orr	r2, r1
 150 0060 1A60     		str	r2, [r3]
 191:.\Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 193:.\Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 194:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:.\Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:.\Generated_Source\PSoC4/ADC.c **** 
 197:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 151              		.loc 1 197 0 discriminator 4
 152 0062 4E4B     		ldr	r3, .L17+60
 153 0064 0022     		mov	r2, #0
 154 0066 1A60     		str	r2, [r3]
 198:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 155              		.loc 1 198 0 discriminator 4
 156 0068 4D4B     		ldr	r3, .L17+64
 157 006a 0022     		mov	r2, #0
 158 006c 1A60     		str	r2, [r3]
 199:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 159              		.loc 1 199 0 discriminator 4
 160 006e 4D4B     		ldr	r3, .L17+68
 161 0070 0122     		mov	r2, #1
 162 0072 1A60     		str	r2, [r3]
 200:.\Generated_Source\PSoC4/ADC.c **** 
 201:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:.\Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 203:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:.\Generated_Source\PSoC4/ADC.c **** 
 205:.\Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 163              		.loc 1 206 0 discriminator 4
 164 0074 4C4B     		ldr	r3, .L17+72
 165 0076 1B68     		ldr	r3, [r3]
 166 0078 7B60     		str	r3, [r7, #4]
 207:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 167              		.loc 1 207 0 discriminator 4
 168 007a 7B68     		ldr	r3, [r7, #4]
 169 007c 4B4A     		ldr	r2, .L17+76
 170 007e 1340     		and	r3, r2
 171 0080 7B60     		str	r3, [r7, #4]
 208:.\Generated_Source\PSoC4/ADC.c ****     
 209:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:.\Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 214:.\Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:.\Generated_Source\PSoC4/ADC.c ****     #else
 216:.\Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:.\Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 219:.\Generated_Source\PSoC4/ADC.c ****         #else
 220:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 172              		.loc 1 220 0 discriminator 4
 173 0082 7B68     		ldr	r3, [r7, #4]
 174 0084 8022     		mov	r2, #128
 175 0086 9205     		lsl	r2, r2, #22
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 8


 176 0088 1343     		orr	r3, r2
 177 008a 7B60     		str	r3, [r7, #4]
 221:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 178              		.loc 1 221 0 discriminator 4
 179 008c 7B68     		ldr	r3, [r7, #4]
 180 008e 0122     		mov	r2, #1
 181 0090 9343     		bic	r3, r2
 182 0092 7B60     		str	r3, [r7, #4]
 222:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:.\Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:.\Generated_Source\PSoC4/ADC.c ****     
 226:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 183              		.loc 1 226 0 discriminator 4
 184 0094 444B     		ldr	r3, .L17+72
 185 0096 7A68     		ldr	r2, [r7, #4]
 186 0098 1A60     		str	r2, [r3]
 227:.\Generated_Source\PSoC4/ADC.c **** 
 228:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:.\Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:.\Generated_Source\PSoC4/ADC.c **** 
 232:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 187              		.loc 1 232 0 discriminator 4
 188 009a 0023     		mov	r3, #0
 189 009c FB60     		str	r3, [r7, #12]
 190 009e 59E0     		b	.L8
 191              	.L16:
 233:.\Generated_Source\PSoC4/ADC.c ****     {
 234:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 192              		.loc 1 234 0
 193 00a0 0022     		mov	r2, #0
 194 00a2 DC23     		mov	r3, #220
 195 00a4 9B01     		lsl	r3, r3, #6
 196 00a6 1340     		and	r3, r2
 197 00a8 7B60     		str	r3, [r7, #4]
 235:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 237:.\Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:.\Generated_Source\PSoC4/ADC.c ****         
 239:.\Generated_Source\PSoC4/ADC.c ****         
 240:.\Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:.\Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:.\Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:.\Generated_Source\PSoC4/ADC.c ****         */
 244:.\Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:.\Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:.\Generated_Source\PSoC4/ADC.c **** 
 249:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:.\Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 251:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:.\Generated_Source\PSoC4/ADC.c ****         {
 253:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 198              		.loc 1 253 0
 199 00aa FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 9


 200 00ac 9B00     		lsl	r3, r3, #2
 201 00ae 404A     		ldr	r2, .L17+80
 202 00b0 9446     		mov	ip, r2
 203 00b2 6344     		add	r3, r3, ip
 204 00b4 7A68     		ldr	r2, [r7, #4]
 205 00b6 1A60     		str	r2, [r3]
 254:.\Generated_Source\PSoC4/ADC.c **** 
 255:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 206              		.loc 1 255 0
 207 00b8 0022     		mov	r2, #0
 208 00ba 0123     		mov	r3, #1
 209 00bc 1340     		and	r3, r2
 210 00be 09D0     		beq	.L9
 256:.\Generated_Source\PSoC4/ADC.c ****             {
 257:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 211              		.loc 1 257 0
 212 00c0 364B     		ldr	r3, .L17+60
 213 00c2 364A     		ldr	r2, .L17+60
 214 00c4 1268     		ldr	r2, [r2]
 215 00c6 F968     		ldr	r1, [r7, #12]
 216 00c8 0120     		mov	r0, #1
 217 00ca 8840     		lsl	r0, r0, r1
 218 00cc 011C     		mov	r1, r0
 219 00ce 89B2     		uxth	r1, r1
 220 00d0 0A43     		orr	r2, r1
 221 00d2 1A60     		str	r2, [r3]
 222              	.L9:
 258:.\Generated_Source\PSoC4/ADC.c ****             }
 259:.\Generated_Source\PSoC4/ADC.c **** 
 260:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 223              		.loc 1 260 0
 224 00d4 0022     		mov	r2, #0
 225 00d6 0223     		mov	r3, #2
 226 00d8 1340     		and	r3, r2
 227 00da 09D0     		beq	.L10
 261:.\Generated_Source\PSoC4/ADC.c ****             {
 262:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 228              		.loc 1 262 0
 229 00dc 304B     		ldr	r3, .L17+64
 230 00de 304A     		ldr	r2, .L17+64
 231 00e0 1268     		ldr	r2, [r2]
 232 00e2 F968     		ldr	r1, [r7, #12]
 233 00e4 0120     		mov	r0, #1
 234 00e6 8840     		lsl	r0, r0, r1
 235 00e8 011C     		mov	r1, r0
 236 00ea 89B2     		uxth	r1, r1
 237 00ec 0A43     		orr	r2, r1
 238 00ee 1A60     		str	r2, [r3]
 239              	.L10:
 263:.\Generated_Source\PSoC4/ADC.c ****             }
 264:.\Generated_Source\PSoC4/ADC.c ****         }
 265:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:.\Generated_Source\PSoC4/ADC.c ****             else
 267:.\Generated_Source\PSoC4/ADC.c ****             {
 268:.\Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 269:.\Generated_Source\PSoC4/ADC.c **** 
 270:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 10


 271:.\Generated_Source\PSoC4/ADC.c ****                 {
 272:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 273:.\Generated_Source\PSoC4/ADC.c ****                 }
 274:.\Generated_Source\PSoC4/ADC.c **** 
 275:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:.\Generated_Source\PSoC4/ADC.c ****                 {
 277:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 278:.\Generated_Source\PSoC4/ADC.c ****                 }
 279:.\Generated_Source\PSoC4/ADC.c ****             }
 280:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:.\Generated_Source\PSoC4/ADC.c **** 
 282:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 240              		.loc 1 282 0
 241 00f0 0022     		mov	r2, #0
 242 00f2 8023     		mov	r3, #128
 243 00f4 9B00     		lsl	r3, r3, #2
 244 00f6 1340     		and	r3, r2
 245 00f8 03D0     		beq	.L11
 283:.\Generated_Source\PSoC4/ADC.c ****         {
 284:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 246              		.loc 1 284 0
 247 00fa 8023     		mov	r3, #128
 248 00fc 5B00     		lsl	r3, r3, #1
 249 00fe BB60     		str	r3, [r7, #8]
 250 0100 02E0     		b	.L12
 251              	.L11:
 285:.\Generated_Source\PSoC4/ADC.c ****         }
 286:.\Generated_Source\PSoC4/ADC.c ****         else
 287:.\Generated_Source\PSoC4/ADC.c ****         {
 288:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 252              		.loc 1 288 0
 253 0102 8023     		mov	r3, #128
 254 0104 5B01     		lsl	r3, r3, #5
 255 0106 BB60     		str	r3, [r7, #8]
 256              	.L12:
 289:.\Generated_Source\PSoC4/ADC.c ****         }
 290:.\Generated_Source\PSoC4/ADC.c **** 
 291:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 257              		.loc 1 291 0
 258 0108 0022     		mov	r2, #0
 259 010a 8023     		mov	r3, #128
 260 010c 5B00     		lsl	r3, r3, #1
 261 010e 1340     		and	r3, r2
 262 0110 05D1     		bne	.L13
 292:.\Generated_Source\PSoC4/ADC.c ****         {
 293:.\Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:.\Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:.\Generated_Source\PSoC4/ADC.c ****             #else
 298:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 263              		.loc 1 298 0
 264 0112 284B     		ldr	r3, .L17+84
 265 0114 FA68     		ldr	r2, [r7, #12]
 266 0116 5200     		lsl	r2, r2, #1
 267 0118 0021     		mov	r1, #0
 268 011a D152     		strh	r1, [r2, r3]
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 11


 269 011c 04E0     		b	.L14
 270              	.L13:
 299:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:.\Generated_Source\PSoC4/ADC.c ****         }
 301:.\Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:.\Generated_Source\PSoC4/ADC.c ****         {
 303:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 306:.\Generated_Source\PSoC4/ADC.c ****             #else
 307:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 271              		.loc 1 307 0
 272 011e 254B     		ldr	r3, .L17+84
 273 0120 FA68     		ldr	r2, [r7, #12]
 274 0122 5200     		lsl	r2, r2, #1
 275 0124 0021     		mov	r1, #0
 276 0126 D152     		strh	r1, [r2, r3]
 277              	.L14:
 308:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:.\Generated_Source\PSoC4/ADC.c ****         }
 310:.\Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 278              		.loc 1 311 0 discriminator 2
 279 0128 BB68     		ldr	r3, [r7, #8]
 280 012a 234A     		ldr	r2, .L17+88
 281 012c 5343     		mul	r3, r2
 282 012e 8022     		mov	r2, #128
 283 0130 D200     		lsl	r2, r2, #3
 284 0132 9446     		mov	ip, r2
 285 0134 6344     		add	r3, r3, ip
 312:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 286              		.loc 1 312 0 discriminator 2
 287 0136 002B     		cmp	r3, #0
 288 0138 02DA     		bge	.L15
 289 013a 204A     		ldr	r2, .L17+92
 290 013c 9446     		mov	ip, r2
 291 013e 6344     		add	r3, r3, ip
 292              	.L15:
 293 0140 DB12     		asr	r3, r3, #11
 311:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 294              		.loc 1 311 0 discriminator 2
 295 0142 9BB2     		uxth	r3, r3
 296 0144 19B2     		sxth	r1, r3
 297 0146 1E4B     		ldr	r3, .L17+96
 298 0148 FA68     		ldr	r2, [r7, #12]
 299 014a 9200     		lsl	r2, r2, #2
 300 014c D150     		str	r1, [r2, r3]
 232:.\Generated_Source\PSoC4/ADC.c ****     {
 301              		.loc 1 232 0 discriminator 2
 302 014e FB68     		ldr	r3, [r7, #12]
 303 0150 0133     		add	r3, r3, #1
 304 0152 FB60     		str	r3, [r7, #12]
 305              	.L8:
 232:.\Generated_Source\PSoC4/ADC.c ****     {
 306              		.loc 1 232 0 is_stmt 0 discriminator 1
 307 0154 FB68     		ldr	r3, [r7, #12]
 308 0156 002B     		cmp	r3, #0
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 12


 309 0158 A2D0     		beq	.L16
 313:.\Generated_Source\PSoC4/ADC.c ****     }
 314:.\Generated_Source\PSoC4/ADC.c **** }
 310              		.loc 1 314 0 is_stmt 1
 311 015a BD46     		mov	sp, r7
 312 015c 04B0     		add	sp, sp, #16
 313              		@ sp needed
 314 015e 80BD     		pop	{r7, pc}
 315              	.L18:
 316              		.align	2
 317              	.L17:
 318 0160 00000000 		.word	ADC_ISR
 319 0164 20003A40 		.word	1077542944
 320 0168 80033A40 		.word	1077543808
 321 016c C0021051 		.word	1360003776
 322 0170 C0020051 		.word	1358955200
 323 0174 00003A40 		.word	1077542912
 324 0178 04003A40 		.word	1077542916
 325 017c 8C000A80 		.word	-2146828148
 326 0180 18003A40 		.word	1077542936
 327 0184 0000FF07 		.word	134152192
 328 0188 1C003A40 		.word	1077542940
 329 018c 10003A40 		.word	1077542928
 330 0190 04000400 		.word	262148
 331 0194 14003A40 		.word	1077542932
 332 0198 00033A40 		.word	1077543680
 333 019c 28023A40 		.word	1077543464
 334 01a0 38023A40 		.word	1077543480
 335 01a4 18023A40 		.word	1077543448
 336 01a8 30003A40 		.word	1077542960
 337 01ac FFFFFFDF 		.word	-536870913
 338 01b0 80003A40 		.word	1077543040
 339 01b4 00000000 		.word	ADC_offset
 340 01b8 10270000 		.word	10000
 341 01bc FF070000 		.word	2047
 342 01c0 00000000 		.word	ADC_countsPer10Volt
 343              		.cfi_endproc
 344              	.LFE3:
 345              		.size	ADC_Init, .-ADC_Init
 346              		.section	.text.ADC_Enable,"ax",%progbits
 347              		.align	2
 348              		.global	ADC_Enable
 349              		.code	16
 350              		.thumb_func
 351              		.type	ADC_Enable, %function
 352              	ADC_Enable:
 353              	.LFB4:
 315:.\Generated_Source\PSoC4/ADC.c **** 
 316:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:.\Generated_Source\PSoC4/ADC.c **** *
 320:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 321:.\Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:.\Generated_Source\PSoC4/ADC.c **** *
 323:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:.\Generated_Source\PSoC4/ADC.c **** *  None.
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 13


 325:.\Generated_Source\PSoC4/ADC.c **** *
 326:.\Generated_Source\PSoC4/ADC.c **** * Return:
 327:.\Generated_Source\PSoC4/ADC.c **** *  None.
 328:.\Generated_Source\PSoC4/ADC.c **** *
 329:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:.\Generated_Source\PSoC4/ADC.c **** {
 354              		.loc 1 331 0
 355              		.cfi_startproc
 356 0000 80B5     		push	{r7, lr}
 357              		.cfi_def_cfa_offset 8
 358              		.cfi_offset 7, -8
 359              		.cfi_offset 14, -4
 360 0002 00AF     		add	r7, sp, #0
 361              		.cfi_def_cfa_register 7
 332:.\Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 362              		.loc 1 332 0
 363 0004 0A4B     		ldr	r3, .L22
 364 0006 1B68     		ldr	r3, [r3]
 365 0008 002B     		cmp	r3, #0
 366 000a 0EDB     		blt	.L19
 333:.\Generated_Source\PSoC4/ADC.c ****     {
 334:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:.\Generated_Source\PSoC4/ADC.c **** 
 336:.\Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 367              		.loc 1 336 0
 368 000c C046     		mov	r8, r8
 369              	.L21:
 370              		.loc 1 336 0 is_stmt 0 discriminator 1
 371 000e 094B     		ldr	r3, .L22+4
 372 0010 1B68     		ldr	r3, [r3]
 373 0012 002B     		cmp	r3, #0
 374 0014 FBDB     		blt	.L21
 337:.\Generated_Source\PSoC4/ADC.c ****             {
 338:.\Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:.\Generated_Source\PSoC4/ADC.c ****             }
 340:.\Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:.\Generated_Source\PSoC4/ADC.c ****         
 342:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 375              		.loc 1 342 0 is_stmt 1
 376 0016 064B     		ldr	r3, .L22
 377 0018 054A     		ldr	r2, .L22
 378 001a 1268     		ldr	r2, [r2]
 379 001c 8021     		mov	r1, #128
 380 001e 0906     		lsl	r1, r1, #24
 381 0020 0A43     		orr	r2, r1
 382 0022 1A60     		str	r2, [r3]
 343:.\Generated_Source\PSoC4/ADC.c ****         
 344:.\Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:.\Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 383              		.loc 1 345 0
 384 0024 0A20     		mov	r0, #10
 385 0026 FFF7FEFF 		bl	CyDelayUs
 386              	.L19:
 346:.\Generated_Source\PSoC4/ADC.c ****     }
 347:.\Generated_Source\PSoC4/ADC.c **** }
 387              		.loc 1 347 0
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 14


 388 002a BD46     		mov	sp, r7
 389              		@ sp needed
 390 002c 80BD     		pop	{r7, pc}
 391              	.L23:
 392 002e C046     		.align	2
 393              	.L22:
 394 0030 00003A40 		.word	1077542912
 395 0034 08023A40 		.word	1077543432
 396              		.cfi_endproc
 397              	.LFE4:
 398              		.size	ADC_Enable, .-ADC_Enable
 399              		.section	.text.ADC_Stop,"ax",%progbits
 400              		.align	2
 401              		.global	ADC_Stop
 402              		.code	16
 403              		.thumb_func
 404              		.type	ADC_Stop, %function
 405              	ADC_Stop:
 406              	.LFB5:
 348:.\Generated_Source\PSoC4/ADC.c **** 
 349:.\Generated_Source\PSoC4/ADC.c **** 
 350:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:.\Generated_Source\PSoC4/ADC.c **** *
 354:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 355:.\Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:.\Generated_Source\PSoC4/ADC.c **** *  mode.
 357:.\Generated_Source\PSoC4/ADC.c **** *
 358:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:.\Generated_Source\PSoC4/ADC.c **** *  None.
 360:.\Generated_Source\PSoC4/ADC.c **** *
 361:.\Generated_Source\PSoC4/ADC.c **** * Return:
 362:.\Generated_Source\PSoC4/ADC.c **** *  None.
 363:.\Generated_Source\PSoC4/ADC.c **** *
 364:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:.\Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:.\Generated_Source\PSoC4/ADC.c **** {
 407              		.loc 1 366 0
 408              		.cfi_startproc
 409 0000 80B5     		push	{r7, lr}
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 7, -8
 412              		.cfi_offset 14, -4
 413 0002 00AF     		add	r7, sp, #0
 414              		.cfi_def_cfa_register 7
 367:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 415              		.loc 1 367 0
 416 0004 034B     		ldr	r3, .L25
 417 0006 034A     		ldr	r2, .L25
 418 0008 1268     		ldr	r2, [r2]
 419 000a 5200     		lsl	r2, r2, #1
 420 000c 5208     		lsr	r2, r2, #1
 421 000e 1A60     		str	r2, [r3]
 368:.\Generated_Source\PSoC4/ADC.c **** }
 422              		.loc 1 368 0
 423 0010 BD46     		mov	sp, r7
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 15


 424              		@ sp needed
 425 0012 80BD     		pop	{r7, pc}
 426              	.L26:
 427              		.align	2
 428              	.L25:
 429 0014 00003A40 		.word	1077542912
 430              		.cfi_endproc
 431              	.LFE5:
 432              		.size	ADC_Stop, .-ADC_Stop
 433              		.section	.text.ADC_StartConvert,"ax",%progbits
 434              		.align	2
 435              		.global	ADC_StartConvert
 436              		.code	16
 437              		.thumb_func
 438              		.type	ADC_StartConvert, %function
 439              	ADC_StartConvert:
 440              	.LFB6:
 369:.\Generated_Source\PSoC4/ADC.c **** 
 370:.\Generated_Source\PSoC4/ADC.c **** 
 371:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:.\Generated_Source\PSoC4/ADC.c **** *
 375:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 376:.\Generated_Source\PSoC4/ADC.c **** *  Description:
 377:.\Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:.\Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:.\Generated_Source\PSoC4/ADC.c **** *
 380:.\Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:.\Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:.\Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:.\Generated_Source\PSoC4/ADC.c **** *
 384:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:.\Generated_Source\PSoC4/ADC.c **** *  None.
 386:.\Generated_Source\PSoC4/ADC.c **** *
 387:.\Generated_Source\PSoC4/ADC.c **** * Return:
 388:.\Generated_Source\PSoC4/ADC.c **** *  None.
 389:.\Generated_Source\PSoC4/ADC.c **** *
 390:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:.\Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:.\Generated_Source\PSoC4/ADC.c **** {
 441              		.loc 1 392 0
 442              		.cfi_startproc
 443 0000 80B5     		push	{r7, lr}
 444              		.cfi_def_cfa_offset 8
 445              		.cfi_offset 7, -8
 446              		.cfi_offset 14, -4
 447 0002 00AF     		add	r7, sp, #0
 448              		.cfi_def_cfa_register 7
 393:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 395:.\Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 449              		.loc 1 396 0
 450 0004 024B     		ldr	r3, .L28
 451 0006 0122     		mov	r2, #1
 452 0008 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 16


 397:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:.\Generated_Source\PSoC4/ADC.c **** 
 399:.\Generated_Source\PSoC4/ADC.c **** }
 453              		.loc 1 399 0
 454 000a BD46     		mov	sp, r7
 455              		@ sp needed
 456 000c 80BD     		pop	{r7, pc}
 457              	.L29:
 458 000e C046     		.align	2
 459              	.L28:
 460 0010 24003A40 		.word	1077542948
 461              		.cfi_endproc
 462              	.LFE6:
 463              		.size	ADC_StartConvert, .-ADC_StartConvert
 464              		.section	.text.ADC_StopConvert,"ax",%progbits
 465              		.align	2
 466              		.global	ADC_StopConvert
 467              		.code	16
 468              		.thumb_func
 469              		.type	ADC_StopConvert, %function
 470              	ADC_StopConvert:
 471              	.LFB7:
 400:.\Generated_Source\PSoC4/ADC.c **** 
 401:.\Generated_Source\PSoC4/ADC.c **** 
 402:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:.\Generated_Source\PSoC4/ADC.c **** *
 406:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 407:.\Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:.\Generated_Source\PSoC4/ADC.c **** *
 409:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:.\Generated_Source\PSoC4/ADC.c **** *  None.
 411:.\Generated_Source\PSoC4/ADC.c **** *
 412:.\Generated_Source\PSoC4/ADC.c **** * Return:
 413:.\Generated_Source\PSoC4/ADC.c **** *  None.
 414:.\Generated_Source\PSoC4/ADC.c **** *
 415:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:.\Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:.\Generated_Source\PSoC4/ADC.c **** {
 472              		.loc 1 417 0
 473              		.cfi_startproc
 474 0000 80B5     		push	{r7, lr}
 475              		.cfi_def_cfa_offset 8
 476              		.cfi_offset 7, -8
 477              		.cfi_offset 14, -4
 478 0002 00AF     		add	r7, sp, #0
 479              		.cfi_def_cfa_register 7
 418:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 420:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:.\Generated_Source\PSoC4/ADC.c **** }
 480              		.loc 1 421 0
 481 0004 BD46     		mov	sp, r7
 482              		@ sp needed
 483 0006 80BD     		pop	{r7, pc}
 484              		.cfi_endproc
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 17


 485              	.LFE7:
 486              		.size	ADC_StopConvert, .-ADC_StopConvert
 487              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 488              		.align	2
 489              		.global	ADC_IsEndConversion
 490              		.code	16
 491              		.thumb_func
 492              		.type	ADC_IsEndConversion, %function
 493              	ADC_IsEndConversion:
 494              	.LFB8:
 422:.\Generated_Source\PSoC4/ADC.c **** 
 423:.\Generated_Source\PSoC4/ADC.c **** 
 424:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:.\Generated_Source\PSoC4/ADC.c **** *
 428:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 429:.\Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:.\Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:.\Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:.\Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:.\Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:.\Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:.\Generated_Source\PSoC4/ADC.c **** *  completed.
 436:.\Generated_Source\PSoC4/ADC.c **** *
 437:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:.\Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:.\Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:.\Generated_Source\PSoC4/ADC.c **** *
 445:.\Generated_Source\PSoC4/ADC.c **** * Return:
 446:.\Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:.\Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:.\Generated_Source\PSoC4/ADC.c **** *
 449:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:.\Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:.\Generated_Source\PSoC4/ADC.c **** {
 495              		.loc 1 451 0
 496              		.cfi_startproc
 497 0000 80B5     		push	{r7, lr}
 498              		.cfi_def_cfa_offset 8
 499              		.cfi_offset 7, -8
 500              		.cfi_offset 14, -4
 501 0002 84B0     		sub	sp, sp, #16
 502              		.cfi_def_cfa_offset 24
 503 0004 00AF     		add	r7, sp, #0
 504              		.cfi_def_cfa_register 7
 505 0006 7860     		str	r0, [r7, #4]
 452:.\Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 506              		.loc 1 452 0
 507 0008 0023     		mov	r3, #0
 508 000a FB60     		str	r3, [r7, #12]
 453:.\Generated_Source\PSoC4/ADC.c **** 
 454:.\Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 18


 509              		.loc 1 454 0
 510 000c 7B68     		ldr	r3, [r7, #4]
 511 000e 0322     		mov	r2, #3
 512 0010 1340     		and	r3, r2
 513 0012 11D0     		beq	.L32
 514              	.L34:
 455:.\Generated_Source\PSoC4/ADC.c ****     {
 456:.\Generated_Source\PSoC4/ADC.c ****         do
 457:.\Generated_Source\PSoC4/ADC.c ****         {
 458:.\Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 515              		.loc 1 458 0 discriminator 2
 516 0014 0B4B     		ldr	r3, .L36
 517 0016 1B68     		ldr	r3, [r3]
 518 0018 0122     		mov	r2, #1
 519 001a 1340     		and	r3, r2
 520 001c FB60     		str	r3, [r7, #12]
 459:.\Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 521              		.loc 1 459 0 discriminator 2
 522 001e FB68     		ldr	r3, [r7, #12]
 523 0020 002B     		cmp	r3, #0
 524 0022 03D1     		bne	.L33
 525              		.loc 1 459 0 is_stmt 0 discriminator 1
 526 0024 7B68     		ldr	r3, [r7, #4]
 527 0026 0222     		mov	r2, #2
 528 0028 1340     		and	r3, r2
 529 002a F3D1     		bne	.L34
 530              	.L33:
 460:.\Generated_Source\PSoC4/ADC.c **** 
 461:.\Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 531              		.loc 1 461 0 is_stmt 1
 532 002c FB68     		ldr	r3, [r7, #12]
 533 002e 002B     		cmp	r3, #0
 534 0030 02D0     		beq	.L32
 462:.\Generated_Source\PSoC4/ADC.c ****         {
 463:.\Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:.\Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 535              		.loc 1 464 0
 536 0032 044B     		ldr	r3, .L36
 537 0034 0122     		mov	r2, #1
 538 0036 1A60     		str	r2, [r3]
 539              	.L32:
 465:.\Generated_Source\PSoC4/ADC.c ****         }
 466:.\Generated_Source\PSoC4/ADC.c ****     }
 467:.\Generated_Source\PSoC4/ADC.c **** 
 468:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:.\Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:.\Generated_Source\PSoC4/ADC.c ****         {
 471:.\Generated_Source\PSoC4/ADC.c ****             do
 472:.\Generated_Source\PSoC4/ADC.c ****             {
 473:.\Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 474:.\Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 475:.\Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 476:.\Generated_Source\PSoC4/ADC.c **** 
 477:.\Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 478:.\Generated_Source\PSoC4/ADC.c ****             {
 479:.\Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 19


 481:.\Generated_Source\PSoC4/ADC.c ****             }
 482:.\Generated_Source\PSoC4/ADC.c ****         }
 483:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:.\Generated_Source\PSoC4/ADC.c **** 
 485:.\Generated_Source\PSoC4/ADC.c ****     return (status);
 540              		.loc 1 485 0
 541 0038 FB68     		ldr	r3, [r7, #12]
 486:.\Generated_Source\PSoC4/ADC.c **** }
 542              		.loc 1 486 0
 543 003a 181C     		mov	r0, r3
 544 003c BD46     		mov	sp, r7
 545 003e 04B0     		add	sp, sp, #16
 546              		@ sp needed
 547 0040 80BD     		pop	{r7, pc}
 548              	.L37:
 549 0042 C046     		.align	2
 550              	.L36:
 551 0044 10023A40 		.word	1077543440
 552              		.cfi_endproc
 553              	.LFE8:
 554              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 555              		.section	.text.ADC_GetResult16,"ax",%progbits
 556              		.align	2
 557              		.global	ADC_GetResult16
 558              		.code	16
 559              		.thumb_func
 560              		.type	ADC_GetResult16, %function
 561              	ADC_GetResult16:
 562              	.LFB9:
 487:.\Generated_Source\PSoC4/ADC.c **** 
 488:.\Generated_Source\PSoC4/ADC.c **** 
 489:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:.\Generated_Source\PSoC4/ADC.c **** *
 493:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 494:.\Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:.\Generated_Source\PSoC4/ADC.c **** *
 496:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:.\Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:.\Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:.\Generated_Source\PSoC4/ADC.c **** *
 500:.\Generated_Source\PSoC4/ADC.c **** * Return:
 501:.\Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:.\Generated_Source\PSoC4/ADC.c **** *
 503:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:.\Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:.\Generated_Source\PSoC4/ADC.c **** {
 563              		.loc 1 505 0
 564              		.cfi_startproc
 565 0000 80B5     		push	{r7, lr}
 566              		.cfi_def_cfa_offset 8
 567              		.cfi_offset 7, -8
 568              		.cfi_offset 14, -4
 569 0002 84B0     		sub	sp, sp, #16
 570              		.cfi_def_cfa_offset 24
 571 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 20


 572              		.cfi_def_cfa_register 7
 573 0006 7860     		str	r0, [r7, #4]
 506:.\Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:.\Generated_Source\PSoC4/ADC.c **** 
 508:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 574              		.loc 1 509 0
 575 0008 7B68     		ldr	r3, [r7, #4]
 576 000a 002B     		cmp	r3, #0
 577 000c 02D0     		beq	.L39
 578              		.loc 1 509 0 is_stmt 0 discriminator 1
 579 000e 0020     		mov	r0, #0
 580 0010 FFF7FEFF 		bl	CyHalt
 581              	.L39:
 510:.\Generated_Source\PSoC4/ADC.c **** 
 511:.\Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 582              		.loc 1 511 0 is_stmt 1
 583 0014 7B68     		ldr	r3, [r7, #4]
 584 0016 002B     		cmp	r3, #0
 585 0018 09D1     		bne	.L40
 512:.\Generated_Source\PSoC4/ADC.c ****     {
 513:.\Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 586              		.loc 1 513 0
 587 001a 7B68     		ldr	r3, [r7, #4]
 588 001c 9B00     		lsl	r3, r3, #2
 589 001e 084A     		ldr	r2, .L43
 590 0020 9446     		mov	ip, r2
 591 0022 6344     		add	r3, r3, ip
 592 0024 1B68     		ldr	r3, [r3]
 593 0026 1B04     		lsl	r3, r3, #16
 594 0028 1B0C     		lsr	r3, r3, #16
 595 002a FB60     		str	r3, [r7, #12]
 596 002c 01E0     		b	.L41
 597              	.L40:
 514:.\Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:.\Generated_Source\PSoC4/ADC.c ****     }
 516:.\Generated_Source\PSoC4/ADC.c ****     else
 517:.\Generated_Source\PSoC4/ADC.c ****     {
 518:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:.\Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 520:.\Generated_Source\PSoC4/ADC.c ****         #else
 521:.\Generated_Source\PSoC4/ADC.c ****             result = 0u;
 598              		.loc 1 521 0
 599 002e 0023     		mov	r3, #0
 600 0030 FB60     		str	r3, [r7, #12]
 601              	.L41:
 522:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:.\Generated_Source\PSoC4/ADC.c ****     }
 524:.\Generated_Source\PSoC4/ADC.c **** 
 525:.\Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 602              		.loc 1 525 0
 603 0032 FB68     		ldr	r3, [r7, #12]
 604 0034 9BB2     		uxth	r3, r3
 605 0036 1BB2     		sxth	r3, r3
 526:.\Generated_Source\PSoC4/ADC.c **** }
 606              		.loc 1 526 0
 607 0038 181C     		mov	r0, r3
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 21


 608 003a BD46     		mov	sp, r7
 609 003c 04B0     		add	sp, sp, #16
 610              		@ sp needed
 611 003e 80BD     		pop	{r7, pc}
 612              	.L44:
 613              		.align	2
 614              	.L43:
 615 0040 80013A40 		.word	1077543296
 616              		.cfi_endproc
 617              	.LFE9:
 618              		.size	ADC_GetResult16, .-ADC_GetResult16
 619              		.section	.text.ADC_SetChanMask,"ax",%progbits
 620              		.align	2
 621              		.global	ADC_SetChanMask
 622              		.code	16
 623              		.thumb_func
 624              		.type	ADC_SetChanMask, %function
 625              	ADC_SetChanMask:
 626              	.LFB10:
 527:.\Generated_Source\PSoC4/ADC.c **** 
 528:.\Generated_Source\PSoC4/ADC.c **** 
 529:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:.\Generated_Source\PSoC4/ADC.c **** *
 533:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 534:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:.\Generated_Source\PSoC4/ADC.c **** *
 536:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:.\Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:.\Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:.\Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:.\Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:.\Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:.\Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:.\Generated_Source\PSoC4/ADC.c **** *
 545:.\Generated_Source\PSoC4/ADC.c **** * Return:
 546:.\Generated_Source\PSoC4/ADC.c **** *  None.
 547:.\Generated_Source\PSoC4/ADC.c **** *
 548:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:.\Generated_Source\PSoC4/ADC.c **** {
 627              		.loc 1 550 0
 628              		.cfi_startproc
 629 0000 80B5     		push	{r7, lr}
 630              		.cfi_def_cfa_offset 8
 631              		.cfi_offset 7, -8
 632              		.cfi_offset 14, -4
 633 0002 82B0     		sub	sp, sp, #8
 634              		.cfi_def_cfa_offset 16
 635 0004 00AF     		add	r7, sp, #0
 636              		.cfi_def_cfa_register 7
 637 0006 7860     		str	r0, [r7, #4]
 551:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 638              		.loc 1 551 0
 639 0008 034B     		ldr	r3, .L46
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 22


 640 000a 7A68     		ldr	r2, [r7, #4]
 641 000c 0121     		mov	r1, #1
 642 000e 0A40     		and	r2, r1
 643 0010 1A60     		str	r2, [r3]
 552:.\Generated_Source\PSoC4/ADC.c **** }
 644              		.loc 1 552 0
 645 0012 BD46     		mov	sp, r7
 646 0014 02B0     		add	sp, sp, #8
 647              		@ sp needed
 648 0016 80BD     		pop	{r7, pc}
 649              	.L47:
 650              		.align	2
 651              	.L46:
 652 0018 20003A40 		.word	1077542944
 653              		.cfi_endproc
 654              	.LFE10:
 655              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 656              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 657              		.align	2
 658              		.global	ADC_SetLowLimit
 659              		.code	16
 660              		.thumb_func
 661              		.type	ADC_SetLowLimit, %function
 662              	ADC_SetLowLimit:
 663              	.LFB11:
 553:.\Generated_Source\PSoC4/ADC.c **** 
 554:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:.\Generated_Source\PSoC4/ADC.c **** 
 556:.\Generated_Source\PSoC4/ADC.c **** 
 557:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:.\Generated_Source\PSoC4/ADC.c ****     *
 561:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:.\Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:.\Generated_Source\PSoC4/ADC.c ****     *
 564:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 566:.\Generated_Source\PSoC4/ADC.c ****     *
 567:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 568:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 569:.\Generated_Source\PSoC4/ADC.c ****     *
 570:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:.\Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:.\Generated_Source\PSoC4/ADC.c ****     {
 573:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 574:.\Generated_Source\PSoC4/ADC.c ****     }
 575:.\Generated_Source\PSoC4/ADC.c **** 
 576:.\Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:.\Generated_Source\PSoC4/ADC.c **** 
 578:.\Generated_Source\PSoC4/ADC.c **** 
 579:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:.\Generated_Source\PSoC4/ADC.c **** *
 583:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 584:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 23


 585:.\Generated_Source\PSoC4/ADC.c **** *
 586:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:.\Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:.\Generated_Source\PSoC4/ADC.c **** *
 589:.\Generated_Source\PSoC4/ADC.c **** * Return:
 590:.\Generated_Source\PSoC4/ADC.c **** *  None.
 591:.\Generated_Source\PSoC4/ADC.c **** *
 592:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:.\Generated_Source\PSoC4/ADC.c **** {
 664              		.loc 1 594 0
 665              		.cfi_startproc
 666 0000 80B5     		push	{r7, lr}
 667              		.cfi_def_cfa_offset 8
 668              		.cfi_offset 7, -8
 669              		.cfi_offset 14, -4
 670 0002 82B0     		sub	sp, sp, #8
 671              		.cfi_def_cfa_offset 16
 672 0004 00AF     		add	r7, sp, #0
 673              		.cfi_def_cfa_register 7
 674 0006 7860     		str	r0, [r7, #4]
 595:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 675              		.loc 1 595 0
 676 0008 084B     		ldr	r3, .L49
 677 000a 084A     		ldr	r2, .L49
 678 000c 1268     		ldr	r2, [r2]
 679 000e 120C     		lsr	r2, r2, #16
 680 0010 1204     		lsl	r2, r2, #16
 681 0012 1A60     		str	r2, [r3]
 596:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 682              		.loc 1 596 0
 683 0014 054B     		ldr	r3, .L49
 684 0016 054A     		ldr	r2, .L49
 685 0018 1168     		ldr	r1, [r2]
 686 001a 7A68     		ldr	r2, [r7, #4]
 687 001c 1204     		lsl	r2, r2, #16
 688 001e 120C     		lsr	r2, r2, #16
 689 0020 0A43     		orr	r2, r1
 690 0022 1A60     		str	r2, [r3]
 597:.\Generated_Source\PSoC4/ADC.c **** }
 691              		.loc 1 597 0
 692 0024 BD46     		mov	sp, r7
 693 0026 02B0     		add	sp, sp, #8
 694              		@ sp needed
 695 0028 80BD     		pop	{r7, pc}
 696              	.L50:
 697 002a C046     		.align	2
 698              	.L49:
 699 002c 18003A40 		.word	1077542936
 700              		.cfi_endproc
 701              	.LFE11:
 702              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 703              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 704              		.align	2
 705              		.global	ADC_SetHighLimit
 706              		.code	16
 707              		.thumb_func
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 24


 708              		.type	ADC_SetHighLimit, %function
 709              	ADC_SetHighLimit:
 710              	.LFB12:
 598:.\Generated_Source\PSoC4/ADC.c **** 
 599:.\Generated_Source\PSoC4/ADC.c **** 
 600:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:.\Generated_Source\PSoC4/ADC.c **** *
 604:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 605:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:.\Generated_Source\PSoC4/ADC.c **** *
 607:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:.\Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:.\Generated_Source\PSoC4/ADC.c **** *
 610:.\Generated_Source\PSoC4/ADC.c **** * Return:
 611:.\Generated_Source\PSoC4/ADC.c **** *  None.
 612:.\Generated_Source\PSoC4/ADC.c **** *
 613:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:.\Generated_Source\PSoC4/ADC.c **** {
 711              		.loc 1 615 0
 712              		.cfi_startproc
 713 0000 80B5     		push	{r7, lr}
 714              		.cfi_def_cfa_offset 8
 715              		.cfi_offset 7, -8
 716              		.cfi_offset 14, -4
 717 0002 82B0     		sub	sp, sp, #8
 718              		.cfi_def_cfa_offset 16
 719 0004 00AF     		add	r7, sp, #0
 720              		.cfi_def_cfa_register 7
 721 0006 7860     		str	r0, [r7, #4]
 616:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 722              		.loc 1 616 0
 723 0008 074B     		ldr	r3, .L52
 724 000a 074A     		ldr	r2, .L52
 725 000c 1268     		ldr	r2, [r2]
 726 000e 1204     		lsl	r2, r2, #16
 727 0010 120C     		lsr	r2, r2, #16
 728 0012 1A60     		str	r2, [r3]
 617:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 729              		.loc 1 617 0
 730 0014 044B     		ldr	r3, .L52
 731 0016 044A     		ldr	r2, .L52
 732 0018 1168     		ldr	r1, [r2]
 733 001a 7A68     		ldr	r2, [r7, #4]
 734 001c 1204     		lsl	r2, r2, #16
 735 001e 0A43     		orr	r2, r1
 736 0020 1A60     		str	r2, [r3]
 618:.\Generated_Source\PSoC4/ADC.c **** }
 737              		.loc 1 618 0
 738 0022 BD46     		mov	sp, r7
 739 0024 02B0     		add	sp, sp, #8
 740              		@ sp needed
 741 0026 80BD     		pop	{r7, pc}
 742              	.L53:
 743              		.align	2
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 25


 744              	.L52:
 745 0028 18003A40 		.word	1077542936
 746              		.cfi_endproc
 747              	.LFE12:
 748              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 749              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 750              		.align	2
 751              		.global	ADC_SetLimitMask
 752              		.code	16
 753              		.thumb_func
 754              		.type	ADC_SetLimitMask, %function
 755              	ADC_SetLimitMask:
 756              	.LFB13:
 619:.\Generated_Source\PSoC4/ADC.c **** 
 620:.\Generated_Source\PSoC4/ADC.c **** 
 621:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/ADC.c **** *
 625:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 626:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:.\Generated_Source\PSoC4/ADC.c **** *
 628:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:.\Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:.\Generated_Source\PSoC4/ADC.c **** *
 634:.\Generated_Source\PSoC4/ADC.c **** * Return:
 635:.\Generated_Source\PSoC4/ADC.c **** *  None.
 636:.\Generated_Source\PSoC4/ADC.c **** *
 637:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:.\Generated_Source\PSoC4/ADC.c **** {
 757              		.loc 1 639 0
 758              		.cfi_startproc
 759 0000 80B5     		push	{r7, lr}
 760              		.cfi_def_cfa_offset 8
 761              		.cfi_offset 7, -8
 762              		.cfi_offset 14, -4
 763 0002 82B0     		sub	sp, sp, #8
 764              		.cfi_def_cfa_offset 16
 765 0004 00AF     		add	r7, sp, #0
 766              		.cfi_def_cfa_register 7
 767 0006 7860     		str	r0, [r7, #4]
 640:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 768              		.loc 1 640 0
 769 0008 034B     		ldr	r3, .L55
 770 000a 7A68     		ldr	r2, [r7, #4]
 771 000c 0121     		mov	r1, #1
 772 000e 0A40     		and	r2, r1
 773 0010 1A60     		str	r2, [r3]
 641:.\Generated_Source\PSoC4/ADC.c **** }
 774              		.loc 1 641 0
 775 0012 BD46     		mov	sp, r7
 776 0014 02B0     		add	sp, sp, #8
 777              		@ sp needed
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 26


 778 0016 80BD     		pop	{r7, pc}
 779              	.L56:
 780              		.align	2
 781              	.L55:
 782 0018 38023A40 		.word	1077543480
 783              		.cfi_endproc
 784              	.LFE13:
 785              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 786              		.section	.text.ADC_SetSatMask,"ax",%progbits
 787              		.align	2
 788              		.global	ADC_SetSatMask
 789              		.code	16
 790              		.thumb_func
 791              		.type	ADC_SetSatMask, %function
 792              	ADC_SetSatMask:
 793              	.LFB14:
 642:.\Generated_Source\PSoC4/ADC.c **** 
 643:.\Generated_Source\PSoC4/ADC.c **** 
 644:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:.\Generated_Source\PSoC4/ADC.c **** *
 648:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 649:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:.\Generated_Source\PSoC4/ADC.c **** *
 651:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:.\Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:.\Generated_Source\PSoC4/ADC.c **** *
 657:.\Generated_Source\PSoC4/ADC.c **** * Return:
 658:.\Generated_Source\PSoC4/ADC.c **** *  None.
 659:.\Generated_Source\PSoC4/ADC.c **** *
 660:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:.\Generated_Source\PSoC4/ADC.c **** {
 794              		.loc 1 662 0
 795              		.cfi_startproc
 796 0000 80B5     		push	{r7, lr}
 797              		.cfi_def_cfa_offset 8
 798              		.cfi_offset 7, -8
 799              		.cfi_offset 14, -4
 800 0002 82B0     		sub	sp, sp, #8
 801              		.cfi_def_cfa_offset 16
 802 0004 00AF     		add	r7, sp, #0
 803              		.cfi_def_cfa_register 7
 804 0006 7860     		str	r0, [r7, #4]
 663:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 805              		.loc 1 663 0
 806 0008 034B     		ldr	r3, .L58
 807 000a 7A68     		ldr	r2, [r7, #4]
 808 000c 0121     		mov	r1, #1
 809 000e 0A40     		and	r2, r1
 810 0010 1A60     		str	r2, [r3]
 664:.\Generated_Source\PSoC4/ADC.c **** }
 811              		.loc 1 664 0
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 27


 812 0012 BD46     		mov	sp, r7
 813 0014 02B0     		add	sp, sp, #8
 814              		@ sp needed
 815 0016 80BD     		pop	{r7, pc}
 816              	.L59:
 817              		.align	2
 818              	.L58:
 819 0018 28023A40 		.word	1077543464
 820              		.cfi_endproc
 821              	.LFE14:
 822              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 823              		.section	.text.ADC_SetOffset,"ax",%progbits
 824              		.align	2
 825              		.global	ADC_SetOffset
 826              		.code	16
 827              		.thumb_func
 828              		.type	ADC_SetOffset, %function
 829              	ADC_SetOffset:
 830              	.LFB15:
 665:.\Generated_Source\PSoC4/ADC.c **** 
 666:.\Generated_Source\PSoC4/ADC.c **** 
 667:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:.\Generated_Source\PSoC4/ADC.c **** *
 671:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 672:.\Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:.\Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:.\Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:.\Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:.\Generated_Source\PSoC4/ADC.c **** *
 677:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:.\Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:.\Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:.\Generated_Source\PSoC4/ADC.c **** *
 682:.\Generated_Source\PSoC4/ADC.c **** * Return:
 683:.\Generated_Source\PSoC4/ADC.c **** *  None.
 684:.\Generated_Source\PSoC4/ADC.c **** *
 685:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:.\Generated_Source\PSoC4/ADC.c **** *
 688:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:.\Generated_Source\PSoC4/ADC.c **** {
 831              		.loc 1 690 0
 832              		.cfi_startproc
 833 0000 80B5     		push	{r7, lr}
 834              		.cfi_def_cfa_offset 8
 835              		.cfi_offset 7, -8
 836              		.cfi_offset 14, -4
 837 0002 82B0     		sub	sp, sp, #8
 838              		.cfi_def_cfa_offset 16
 839 0004 00AF     		add	r7, sp, #0
 840              		.cfi_def_cfa_register 7
 841 0006 7860     		str	r0, [r7, #4]
 842 0008 0A1C     		mov	r2, r1
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 28


 843 000a BB1C     		add	r3, r7, #2
 844 000c 1A80     		strh	r2, [r3]
 691:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 845              		.loc 1 692 0
 846 000e 7B68     		ldr	r3, [r7, #4]
 847 0010 002B     		cmp	r3, #0
 848 0012 02D0     		beq	.L61
 849              		.loc 1 692 0 is_stmt 0 discriminator 1
 850 0014 0020     		mov	r0, #0
 851 0016 FFF7FEFF 		bl	CyHalt
 852              	.L61:
 693:.\Generated_Source\PSoC4/ADC.c **** 
 694:.\Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 853              		.loc 1 694 0 is_stmt 1
 854 001a 044B     		ldr	r3, .L62
 855 001c 7A68     		ldr	r2, [r7, #4]
 856 001e 5200     		lsl	r2, r2, #1
 857 0020 B91C     		add	r1, r7, #2
 858 0022 0988     		ldrh	r1, [r1]
 859 0024 D152     		strh	r1, [r2, r3]
 695:.\Generated_Source\PSoC4/ADC.c **** }
 860              		.loc 1 695 0
 861 0026 BD46     		mov	sp, r7
 862 0028 02B0     		add	sp, sp, #8
 863              		@ sp needed
 864 002a 80BD     		pop	{r7, pc}
 865              	.L63:
 866              		.align	2
 867              	.L62:
 868 002c 00000000 		.word	ADC_offset
 869              		.cfi_endproc
 870              	.LFE15:
 871              		.size	ADC_SetOffset, .-ADC_SetOffset
 872              		.section	.text.ADC_SetGain,"ax",%progbits
 873              		.align	2
 874              		.global	ADC_SetGain
 875              		.code	16
 876              		.thumb_func
 877              		.type	ADC_SetGain, %function
 878              	ADC_SetGain:
 879              	.LFB16:
 696:.\Generated_Source\PSoC4/ADC.c **** 
 697:.\Generated_Source\PSoC4/ADC.c **** 
 698:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:.\Generated_Source\PSoC4/ADC.c **** *
 702:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 703:.\Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:.\Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:.\Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:.\Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:.\Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:.\Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:.\Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 29


 711:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:.\Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:.\Generated_Source\PSoC4/ADC.c **** *
 715:.\Generated_Source\PSoC4/ADC.c **** * Return:
 716:.\Generated_Source\PSoC4/ADC.c **** *  None.
 717:.\Generated_Source\PSoC4/ADC.c **** *
 718:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:.\Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:.\Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:.\Generated_Source\PSoC4/ADC.c **** *
 722:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:.\Generated_Source\PSoC4/ADC.c **** {
 880              		.loc 1 724 0
 881              		.cfi_startproc
 882 0000 80B5     		push	{r7, lr}
 883              		.cfi_def_cfa_offset 8
 884              		.cfi_offset 7, -8
 885              		.cfi_offset 14, -4
 886 0002 82B0     		sub	sp, sp, #8
 887              		.cfi_def_cfa_offset 16
 888 0004 00AF     		add	r7, sp, #0
 889              		.cfi_def_cfa_register 7
 890 0006 7860     		str	r0, [r7, #4]
 891 0008 3960     		str	r1, [r7]
 725:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 892              		.loc 1 726 0
 893 000a 7B68     		ldr	r3, [r7, #4]
 894 000c 002B     		cmp	r3, #0
 895 000e 02D0     		beq	.L65
 896              		.loc 1 726 0 is_stmt 0 discriminator 1
 897 0010 0020     		mov	r0, #0
 898 0012 FFF7FEFF 		bl	CyHalt
 899              	.L65:
 727:.\Generated_Source\PSoC4/ADC.c **** 
 728:.\Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 900              		.loc 1 728 0 is_stmt 1
 901 0016 044B     		ldr	r3, .L66
 902 0018 7A68     		ldr	r2, [r7, #4]
 903 001a 9200     		lsl	r2, r2, #2
 904 001c 3968     		ldr	r1, [r7]
 905 001e D150     		str	r1, [r2, r3]
 729:.\Generated_Source\PSoC4/ADC.c **** }
 906              		.loc 1 729 0
 907 0020 BD46     		mov	sp, r7
 908 0022 02B0     		add	sp, sp, #8
 909              		@ sp needed
 910 0024 80BD     		pop	{r7, pc}
 911              	.L67:
 912 0026 C046     		.align	2
 913              	.L66:
 914 0028 00000000 		.word	ADC_countsPer10Volt
 915              		.cfi_endproc
 916              	.LFE16:
 917              		.size	ADC_SetGain, .-ADC_SetGain
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 30


 918              		.global	__aeabi_idiv
 919              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 920              		.align	2
 921              		.global	ADC_CountsTo_mVolts
 922              		.code	16
 923              		.thumb_func
 924              		.type	ADC_CountsTo_mVolts, %function
 925              	ADC_CountsTo_mVolts:
 926              	.LFB17:
 730:.\Generated_Source\PSoC4/ADC.c **** 
 731:.\Generated_Source\PSoC4/ADC.c **** 
 732:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:.\Generated_Source\PSoC4/ADC.c **** 
 734:.\Generated_Source\PSoC4/ADC.c **** 
 735:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:.\Generated_Source\PSoC4/ADC.c ****     *
 739:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:.\Generated_Source\PSoC4/ADC.c ****     *
 743:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:.\Generated_Source\PSoC4/ADC.c ****     *
 747:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 748:.\Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:.\Generated_Source\PSoC4/ADC.c ****     *
 750:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:.\Generated_Source\PSoC4/ADC.c ****     *
 755:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:.\Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:.\Generated_Source\PSoC4/ADC.c ****     {
 927              		.loc 1 757 0
 928              		.cfi_startproc
 929 0000 80B5     		push	{r7, lr}
 930              		.cfi_def_cfa_offset 8
 931              		.cfi_offset 7, -8
 932              		.cfi_offset 14, -4
 933 0002 84B0     		sub	sp, sp, #16
 934              		.cfi_def_cfa_offset 24
 935 0004 00AF     		add	r7, sp, #0
 936              		.cfi_def_cfa_register 7
 937 0006 7860     		str	r0, [r7, #4]
 938 0008 0A1C     		mov	r2, r1
 939 000a BB1C     		add	r3, r7, #2
 940 000c 1A80     		strh	r2, [r3]
 758:.\Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:.\Generated_Source\PSoC4/ADC.c **** 
 760:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 941              		.loc 1 761 0
 942 000e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 31


 943 0010 002B     		cmp	r3, #0
 944 0012 02D0     		beq	.L69
 945              		.loc 1 761 0 is_stmt 0 discriminator 1
 946 0014 0020     		mov	r0, #0
 947 0016 FFF7FEFF 		bl	CyHalt
 948              	.L69:
 762:.\Generated_Source\PSoC4/ADC.c **** 
 763:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:.\Generated_Source\PSoC4/ADC.c ****             {
 767:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:.\Generated_Source\PSoC4/ADC.c ****             }
 769:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:.\Generated_Source\PSoC4/ADC.c **** 
 771:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 949              		.loc 1 772 0 is_stmt 1
 950 001a 1F4B     		ldr	r3, .L75
 951 001c 7A68     		ldr	r2, [r7, #4]
 952 001e 5200     		lsl	r2, r2, #1
 953 0020 D35A     		ldrh	r3, [r2, r3]
 954 0022 99B2     		uxth	r1, r3
 955 0024 BB1C     		add	r3, r7, #2
 956 0026 1A88     		ldrh	r2, [r3]
 957 0028 8BB2     		uxth	r3, r1
 958 002a D31A     		sub	r3, r2, r3
 959 002c 9AB2     		uxth	r2, r3
 960 002e BB1C     		add	r3, r7, #2
 961 0030 1A80     		strh	r2, [r3]
 773:.\Generated_Source\PSoC4/ADC.c **** 
 774:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 962              		.loc 1 774 0
 963 0032 BB1C     		add	r3, r7, #2
 964 0034 0022     		mov	r2, #0
 965 0036 9B5E     		ldrsh	r3, [r3, r2]
 966 0038 184A     		ldr	r2, .L75+4
 967 003a 5A43     		mul	r2, r3
 775:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 968              		.loc 1 775 0
 969 003c BB1C     		add	r3, r7, #2
 970 003e 0021     		mov	r1, #0
 971 0040 5B5E     		ldrsh	r3, [r3, r1]
 972 0042 002B     		cmp	r3, #0
 973 0044 08DD     		ble	.L70
 974              		.loc 1 775 0 is_stmt 0 discriminator 1
 975 0046 164B     		ldr	r3, .L75+8
 976 0048 7968     		ldr	r1, [r7, #4]
 977 004a 8900     		lsl	r1, r1, #2
 978 004c CB58     		ldr	r3, [r1, r3]
 979 004e 002B     		cmp	r3, #0
 980 0050 00DA     		bge	.L71
 981 0052 0133     		add	r3, r3, #1
 982              	.L71:
 983 0054 5B10     		asr	r3, r3, #1
 984 0056 08E0     		b	.L72
 985              	.L70:
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 32


 986              		.loc 1 775 0 discriminator 2
 987 0058 114B     		ldr	r3, .L75+8
 988 005a 7968     		ldr	r1, [r7, #4]
 989 005c 8900     		lsl	r1, r1, #2
 990 005e CB58     		ldr	r3, [r1, r3]
 991 0060 002B     		cmp	r3, #0
 992 0062 00DA     		bge	.L73
 993 0064 0133     		add	r3, r3, #1
 994              	.L73:
 995 0066 5B10     		asr	r3, r3, #1
 996 0068 5B42     		neg	r3, r3
 997              	.L72:
 774:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 998              		.loc 1 774 0 is_stmt 1
 999 006a D118     		add	r1, r2, r3
 776:.\Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 1000              		.loc 1 776 0
 1001 006c 0C4B     		ldr	r3, .L75+8
 1002 006e 7A68     		ldr	r2, [r7, #4]
 1003 0070 9200     		lsl	r2, r2, #2
 1004 0072 D358     		ldr	r3, [r2, r3]
 1005 0074 081C     		mov	r0, r1
 1006 0076 191C     		mov	r1, r3
 1007 0078 FFF7FEFF 		bl	__aeabi_idiv
 1008 007c 031C     		mov	r3, r0
 1009 007e 1A1C     		mov	r2, r3
 774:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1010              		.loc 1 774 0
 1011 0080 0E23     		mov	r3, #14
 1012 0082 FB18     		add	r3, r7, r3
 1013 0084 1A80     		strh	r2, [r3]
 777:.\Generated_Source\PSoC4/ADC.c **** 
 778:.\Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 1014              		.loc 1 778 0
 1015 0086 0E23     		mov	r3, #14
 1016 0088 FB18     		add	r3, r7, r3
 1017 008a 1B88     		ldrh	r3, [r3]
 1018 008c 1BB2     		sxth	r3, r3
 779:.\Generated_Source\PSoC4/ADC.c ****     }
 1019              		.loc 1 779 0
 1020 008e 181C     		mov	r0, r3
 1021 0090 BD46     		mov	sp, r7
 1022 0092 04B0     		add	sp, sp, #16
 1023              		@ sp needed
 1024 0094 80BD     		pop	{r7, pc}
 1025              	.L76:
 1026 0096 C046     		.align	2
 1027              	.L75:
 1028 0098 00000000 		.word	ADC_offset
 1029 009c 10270000 		.word	10000
 1030 00a0 00000000 		.word	ADC_countsPer10Volt
 1031              		.cfi_endproc
 1032              	.LFE17:
 1033              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 1034              		.global	__aeabi_lmul
 1035              		.global	__aeabi_ldivmod
 1036              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 33


 1037              		.align	2
 1038              		.global	ADC_CountsTo_uVolts
 1039              		.code	16
 1040              		.thumb_func
 1041              		.type	ADC_CountsTo_uVolts, %function
 1042              	ADC_CountsTo_uVolts:
 1043              	.LFB18:
 780:.\Generated_Source\PSoC4/ADC.c **** 
 781:.\Generated_Source\PSoC4/ADC.c **** 
 782:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:.\Generated_Source\PSoC4/ADC.c ****     *
 786:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:.\Generated_Source\PSoC4/ADC.c ****     *
 790:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:.\Generated_Source\PSoC4/ADC.c ****     *
 794:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 795:.\Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:.\Generated_Source\PSoC4/ADC.c ****     *
 797:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:.\Generated_Source\PSoC4/ADC.c ****     *
 802:.\Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:.\Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:.\Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:.\Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:.\Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:.\Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:.\Generated_Source\PSoC4/ADC.c ****     *
 809:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:.\Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:.\Generated_Source\PSoC4/ADC.c ****     {
 1044              		.loc 1 811 0
 1045              		.cfi_startproc
 1046 0000 B0B5     		push	{r4, r5, r7, lr}
 1047              		.cfi_def_cfa_offset 16
 1048              		.cfi_offset 4, -16
 1049              		.cfi_offset 5, -12
 1050              		.cfi_offset 7, -8
 1051              		.cfi_offset 14, -4
 1052 0002 86B0     		sub	sp, sp, #24
 1053              		.cfi_def_cfa_offset 40
 1054 0004 00AF     		add	r7, sp, #0
 1055              		.cfi_def_cfa_register 7
 1056 0006 F860     		str	r0, [r7, #12]
 1057 0008 0A1C     		mov	r2, r1
 1058 000a 0A23     		mov	r3, #10
 1059 000c FB18     		add	r3, r7, r3
 1060 000e 1A80     		strh	r2, [r3]
 812:.\Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 34


 813:.\Generated_Source\PSoC4/ADC.c **** 
 814:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1061              		.loc 1 815 0
 1062 0010 FB68     		ldr	r3, [r7, #12]
 1063 0012 002B     		cmp	r3, #0
 1064 0014 02D0     		beq	.L78
 1065              		.loc 1 815 0 is_stmt 0 discriminator 1
 1066 0016 0020     		mov	r0, #0
 1067 0018 FFF7FEFF 		bl	CyHalt
 1068              	.L78:
 816:.\Generated_Source\PSoC4/ADC.c **** 
 817:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:.\Generated_Source\PSoC4/ADC.c ****             {
 821:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:.\Generated_Source\PSoC4/ADC.c ****             }
 823:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:.\Generated_Source\PSoC4/ADC.c **** 
 825:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1069              		.loc 1 826 0 is_stmt 1
 1070 001c 194B     		ldr	r3, .L80
 1071 001e FA68     		ldr	r2, [r7, #12]
 1072 0020 5200     		lsl	r2, r2, #1
 1073 0022 D35A     		ldrh	r3, [r2, r3]
 1074 0024 99B2     		uxth	r1, r3
 1075 0026 0A23     		mov	r3, #10
 1076 0028 FB18     		add	r3, r7, r3
 1077 002a 1A88     		ldrh	r2, [r3]
 1078 002c 8BB2     		uxth	r3, r1
 1079 002e D31A     		sub	r3, r2, r3
 1080 0030 9AB2     		uxth	r2, r3
 1081 0032 0A23     		mov	r3, #10
 1082 0034 FB18     		add	r3, r7, r3
 1083 0036 1A80     		strh	r2, [r3]
 827:.\Generated_Source\PSoC4/ADC.c **** 
 828:.\Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 1084              		.loc 1 828 0
 1085 0038 0A23     		mov	r3, #10
 1086 003a FB18     		add	r3, r7, r3
 1087 003c 1B88     		ldrh	r3, [r3]
 1088 003e 1BB2     		sxth	r3, r3
 1089 0040 3B60     		str	r3, [r7]
 1090 0042 DB17     		asr	r3, r3, #31
 1091 0044 7B60     		str	r3, [r7, #4]
 1092 0046 3868     		ldr	r0, [r7]
 1093 0048 7968     		ldr	r1, [r7, #4]
 1094 004a 0F4A     		ldr	r2, .L80+4
 1095 004c 0023     		mov	r3, #0
 1096 004e FFF7FEFF 		bl	__aeabi_lmul
 1097 0052 021C     		mov	r2, r0
 1098 0054 0B1C     		mov	r3, r1
 1099 0056 101C     		mov	r0, r2
 1100 0058 191C     		mov	r1, r3
 1101 005a 0C4B     		ldr	r3, .L80+8
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 35


 1102 005c FA68     		ldr	r2, [r7, #12]
 1103 005e 9200     		lsl	r2, r2, #2
 1104 0060 D358     		ldr	r3, [r2, r3]
 1105 0062 1C1C     		mov	r4, r3
 1106 0064 DB17     		asr	r3, r3, #31
 1107 0066 1D1C     		mov	r5, r3
 1108 0068 221C     		mov	r2, r4
 1109 006a 2B1C     		mov	r3, r5
 1110 006c FFF7FEFF 		bl	__aeabi_ldivmod
 1111 0070 031C     		mov	r3, r0
 1112 0072 0C1C     		mov	r4, r1
 1113 0074 3B61     		str	r3, [r7, #16]
 1114 0076 7C61     		str	r4, [r7, #20]
 829:.\Generated_Source\PSoC4/ADC.c **** 
 830:.\Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 1115              		.loc 1 830 0
 1116 0078 3B69     		ldr	r3, [r7, #16]
 831:.\Generated_Source\PSoC4/ADC.c ****     }
 1117              		.loc 1 831 0
 1118 007a 181C     		mov	r0, r3
 1119 007c BD46     		mov	sp, r7
 1120 007e 06B0     		add	sp, sp, #24
 1121              		@ sp needed
 1122 0080 B0BD     		pop	{r4, r5, r7, pc}
 1123              	.L81:
 1124 0082 C046     		.align	2
 1125              	.L80:
 1126 0084 00000000 		.word	ADC_offset
 1127 0088 80969800 		.word	10000000
 1128 008c 00000000 		.word	ADC_countsPer10Volt
 1129              		.cfi_endproc
 1130              	.LFE18:
 1131              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1132              		.global	__aeabi_i2f
 1133              		.global	__aeabi_fmul
 1134              		.global	__aeabi_fdiv
 1135              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1136              		.align	2
 1137              		.global	ADC_CountsTo_Volts
 1138              		.code	16
 1139              		.thumb_func
 1140              		.type	ADC_CountsTo_Volts, %function
 1141              	ADC_CountsTo_Volts:
 1142              	.LFB19:
 832:.\Generated_Source\PSoC4/ADC.c **** 
 833:.\Generated_Source\PSoC4/ADC.c **** 
 834:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:.\Generated_Source\PSoC4/ADC.c ****     *
 838:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:.\Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:.\Generated_Source\PSoC4/ADC.c ****     *
 842:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:.\Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 36


 845:.\Generated_Source\PSoC4/ADC.c ****     *
 846:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 847:.\Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:.\Generated_Source\PSoC4/ADC.c ****     *
 849:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:.\Generated_Source\PSoC4/ADC.c ****     *
 854:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:.\Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:.\Generated_Source\PSoC4/ADC.c ****     {
 1143              		.loc 1 856 0
 1144              		.cfi_startproc
 1145 0000 90B5     		push	{r4, r7, lr}
 1146              		.cfi_def_cfa_offset 12
 1147              		.cfi_offset 4, -12
 1148              		.cfi_offset 7, -8
 1149              		.cfi_offset 14, -4
 1150 0002 85B0     		sub	sp, sp, #20
 1151              		.cfi_def_cfa_offset 32
 1152 0004 00AF     		add	r7, sp, #0
 1153              		.cfi_def_cfa_register 7
 1154 0006 7860     		str	r0, [r7, #4]
 1155 0008 0A1C     		mov	r2, r1
 1156 000a BB1C     		add	r3, r7, #2
 1157 000c 1A80     		strh	r2, [r3]
 857:.\Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:.\Generated_Source\PSoC4/ADC.c **** 
 859:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1158              		.loc 1 860 0
 1159 000e 7B68     		ldr	r3, [r7, #4]
 1160 0010 002B     		cmp	r3, #0
 1161 0012 02D0     		beq	.L83
 1162              		.loc 1 860 0 is_stmt 0 discriminator 1
 1163 0014 0020     		mov	r0, #0
 1164 0016 FFF7FEFF 		bl	CyHalt
 1165              	.L83:
 861:.\Generated_Source\PSoC4/ADC.c **** 
 862:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:.\Generated_Source\PSoC4/ADC.c ****             {
 866:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:.\Generated_Source\PSoC4/ADC.c ****             }
 868:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:.\Generated_Source\PSoC4/ADC.c **** 
 870:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1166              		.loc 1 871 0 is_stmt 1
 1167 001a 164B     		ldr	r3, .L85
 1168 001c 7A68     		ldr	r2, [r7, #4]
 1169 001e 5200     		lsl	r2, r2, #1
 1170 0020 D35A     		ldrh	r3, [r2, r3]
 1171 0022 99B2     		uxth	r1, r3
 1172 0024 BB1C     		add	r3, r7, #2
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 37


 1173 0026 1A88     		ldrh	r2, [r3]
 1174 0028 8BB2     		uxth	r3, r1
 1175 002a D31A     		sub	r3, r2, r3
 1176 002c 9AB2     		uxth	r2, r3
 1177 002e BB1C     		add	r3, r7, #2
 1178 0030 1A80     		strh	r2, [r3]
 872:.\Generated_Source\PSoC4/ADC.c **** 
 873:.\Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 1179              		.loc 1 873 0
 1180 0032 BB1C     		add	r3, r7, #2
 1181 0034 0022     		mov	r2, #0
 1182 0036 9B5E     		ldrsh	r3, [r3, r2]
 1183 0038 181C     		mov	r0, r3
 1184 003a FFF7FEFF 		bl	__aeabi_i2f
 1185 003e 031C     		add	r3, r0, #0
 1186 0040 181C     		add	r0, r3, #0
 1187 0042 0D49     		ldr	r1, .L85+4
 1188 0044 FFF7FEFF 		bl	__aeabi_fmul
 1189 0048 031C     		add	r3, r0, #0
 1190 004a 1C1C     		add	r4, r3, #0
 1191 004c 0B4B     		ldr	r3, .L85+8
 1192 004e 7A68     		ldr	r2, [r7, #4]
 1193 0050 9200     		lsl	r2, r2, #2
 1194 0052 D358     		ldr	r3, [r2, r3]
 1195 0054 181C     		mov	r0, r3
 1196 0056 FFF7FEFF 		bl	__aeabi_i2f
 1197 005a 031C     		add	r3, r0, #0
 1198 005c 201C     		add	r0, r4, #0
 1199 005e 191C     		add	r1, r3, #0
 1200 0060 FFF7FEFF 		bl	__aeabi_fdiv
 1201 0064 031C     		add	r3, r0, #0
 1202 0066 FB60     		str	r3, [r7, #12]
 874:.\Generated_Source\PSoC4/ADC.c **** 
 875:.\Generated_Source\PSoC4/ADC.c ****         return( volts );
 1203              		.loc 1 875 0
 1204 0068 FB68     		ldr	r3, [r7, #12]
 876:.\Generated_Source\PSoC4/ADC.c ****     }
 1205              		.loc 1 876 0
 1206 006a 181C     		add	r0, r3, #0
 1207 006c BD46     		mov	sp, r7
 1208 006e 05B0     		add	sp, sp, #20
 1209              		@ sp needed
 1210 0070 90BD     		pop	{r4, r7, pc}
 1211              	.L86:
 1212 0072 C046     		.align	2
 1213              	.L85:
 1214 0074 00000000 		.word	ADC_offset
 1215 0078 00002041 		.word	1092616192
 1216 007c 00000000 		.word	ADC_countsPer10Volt
 1217              		.cfi_endproc
 1218              	.LFE19:
 1219              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1220              		.text
 1221              	.Letext0:
 1222              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1223              		.section	.debug_info,"",%progbits
 1224              	.Ldebug_info0:
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 38


 1225 0000 77040000 		.4byte	0x477
 1226 0004 0400     		.2byte	0x4
 1227 0006 00000000 		.4byte	.Ldebug_abbrev0
 1228 000a 04       		.byte	0x4
 1229 000b 01       		.uleb128 0x1
 1230 000c 27000000 		.4byte	.LASF59
 1231 0010 01       		.byte	0x1
 1232 0011 B5000000 		.4byte	.LASF60
 1233 0015 F8020000 		.4byte	.LASF61
 1234 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1235 001d 00000000 		.4byte	0
 1236 0021 00000000 		.4byte	.Ldebug_line0
 1237 0025 02       		.uleb128 0x2
 1238 0026 01       		.byte	0x1
 1239 0027 06       		.byte	0x6
 1240 0028 67030000 		.4byte	.LASF0
 1241 002c 02       		.uleb128 0x2
 1242 002d 01       		.byte	0x1
 1243 002e 08       		.byte	0x8
 1244 002f 71010000 		.4byte	.LASF1
 1245 0033 02       		.uleb128 0x2
 1246 0034 02       		.byte	0x2
 1247 0035 05       		.byte	0x5
 1248 0036 19010000 		.4byte	.LASF2
 1249 003a 02       		.uleb128 0x2
 1250 003b 02       		.byte	0x2
 1251 003c 07       		.byte	0x7
 1252 003d 06010000 		.4byte	.LASF3
 1253 0041 02       		.uleb128 0x2
 1254 0042 04       		.byte	0x4
 1255 0043 05       		.byte	0x5
 1256 0044 59030000 		.4byte	.LASF4
 1257 0048 02       		.uleb128 0x2
 1258 0049 04       		.byte	0x4
 1259 004a 07       		.byte	0x7
 1260 004b 96010000 		.4byte	.LASF5
 1261 004f 02       		.uleb128 0x2
 1262 0050 08       		.byte	0x8
 1263 0051 05       		.byte	0x5
 1264 0052 00000000 		.4byte	.LASF6
 1265 0056 02       		.uleb128 0x2
 1266 0057 08       		.byte	0x8
 1267 0058 07       		.byte	0x7
 1268 0059 51020000 		.4byte	.LASF7
 1269 005d 03       		.uleb128 0x3
 1270 005e 04       		.byte	0x4
 1271 005f 05       		.byte	0x5
 1272 0060 696E7400 		.ascii	"int\000"
 1273 0064 02       		.uleb128 0x2
 1274 0065 04       		.byte	0x4
 1275 0066 07       		.byte	0x7
 1276 0067 32020000 		.4byte	.LASF8
 1277 006b 04       		.uleb128 0x4
 1278 006c 3F030000 		.4byte	.LASF9
 1279 0070 02       		.byte	0x2
 1280 0071 9801     		.2byte	0x198
 1281 0073 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 39


 1282 0077 04       		.uleb128 0x4
 1283 0078 09020000 		.4byte	.LASF10
 1284 007c 02       		.byte	0x2
 1285 007d 9901     		.2byte	0x199
 1286 007f 3A000000 		.4byte	0x3a
 1287 0083 04       		.uleb128 0x4
 1288 0084 1A020000 		.4byte	.LASF11
 1289 0088 02       		.byte	0x2
 1290 0089 9A01     		.2byte	0x19a
 1291 008b 48000000 		.4byte	0x48
 1292 008f 04       		.uleb128 0x4
 1293 0090 90010000 		.4byte	.LASF12
 1294 0094 02       		.byte	0x2
 1295 0095 9C01     		.2byte	0x19c
 1296 0097 33000000 		.4byte	0x33
 1297 009b 04       		.uleb128 0x4
 1298 009c A8010000 		.4byte	.LASF13
 1299 00a0 02       		.byte	0x2
 1300 00a1 9D01     		.2byte	0x19d
 1301 00a3 41000000 		.4byte	0x41
 1302 00a7 04       		.uleb128 0x4
 1303 00a8 48010000 		.4byte	.LASF14
 1304 00ac 02       		.byte	0x2
 1305 00ad 9E01     		.2byte	0x19e
 1306 00af B3000000 		.4byte	0xb3
 1307 00b3 02       		.uleb128 0x2
 1308 00b4 04       		.byte	0x4
 1309 00b5 04       		.byte	0x4
 1310 00b6 DB000000 		.4byte	.LASF15
 1311 00ba 02       		.uleb128 0x2
 1312 00bb 08       		.byte	0x8
 1313 00bc 04       		.byte	0x4
 1314 00bd F1010000 		.4byte	.LASF16
 1315 00c1 04       		.uleb128 0x4
 1316 00c2 7F030000 		.4byte	.LASF17
 1317 00c6 02       		.byte	0x2
 1318 00c7 A301     		.2byte	0x1a3
 1319 00c9 4F000000 		.4byte	0x4f
 1320 00cd 02       		.uleb128 0x2
 1321 00ce 01       		.byte	0x1
 1322 00cf 08       		.byte	0x8
 1323 00d0 62030000 		.4byte	.LASF18
 1324 00d4 04       		.uleb128 0x4
 1325 00d5 21000000 		.4byte	.LASF19
 1326 00d9 02       		.byte	0x2
 1327 00da 4402     		.2byte	0x244
 1328 00dc E0000000 		.4byte	0xe0
 1329 00e0 05       		.uleb128 0x5
 1330 00e1 83000000 		.4byte	0x83
 1331 00e5 02       		.uleb128 0x2
 1332 00e6 04       		.byte	0x4
 1333 00e7 07       		.byte	0x7
 1334 00e8 94020000 		.4byte	.LASF20
 1335 00ec 06       		.uleb128 0x6
 1336 00ed 6F020000 		.4byte	.LASF24
 1337 00f1 01       		.byte	0x1
 1338 00f2 3F       		.byte	0x3f
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 40


 1339 00f3 00000000 		.4byte	.LFB2
 1340 00f7 24000000 		.4byte	.LFE2-.LFB2
 1341 00fb 01       		.uleb128 0x1
 1342 00fc 9C       		.byte	0x9c
 1343 00fd 07       		.uleb128 0x7
 1344 00fe 79020000 		.4byte	.LASF35
 1345 0102 01       		.byte	0x1
 1346 0103 5E       		.byte	0x5e
 1347 0104 00000000 		.4byte	.LFB3
 1348 0108 C4010000 		.4byte	.LFE3-.LFB3
 1349 010c 01       		.uleb128 0x1
 1350 010d 9C       		.byte	0x9c
 1351 010e 3D010000 		.4byte	0x13d
 1352 0112 08       		.uleb128 0x8
 1353 0113 DA020000 		.4byte	.LASF21
 1354 0117 01       		.byte	0x1
 1355 0118 60       		.byte	0x60
 1356 0119 83000000 		.4byte	0x83
 1357 011d 02       		.uleb128 0x2
 1358 011e 91       		.byte	0x91
 1359 011f 74       		.sleb128 -12
 1360 0120 08       		.uleb128 0x8
 1361 0121 5B010000 		.4byte	.LASF22
 1362 0125 01       		.byte	0x1
 1363 0126 61       		.byte	0x61
 1364 0127 83000000 		.4byte	0x83
 1365 012b 02       		.uleb128 0x2
 1366 012c 91       		.byte	0x91
 1367 012d 6C       		.sleb128 -20
 1368 012e 08       		.uleb128 0x8
 1369 012f 4A020000 		.4byte	.LASF23
 1370 0133 01       		.byte	0x1
 1371 0134 62       		.byte	0x62
 1372 0135 9B000000 		.4byte	0x9b
 1373 0139 02       		.uleb128 0x2
 1374 013a 91       		.byte	0x91
 1375 013b 70       		.sleb128 -16
 1376 013c 00       		.byte	0
 1377 013d 09       		.uleb128 0x9
 1378 013e 3F020000 		.4byte	.LASF25
 1379 0142 01       		.byte	0x1
 1380 0143 4A01     		.2byte	0x14a
 1381 0145 00000000 		.4byte	.LFB4
 1382 0149 38000000 		.4byte	.LFE4-.LFB4
 1383 014d 01       		.uleb128 0x1
 1384 014e 9C       		.byte	0x9c
 1385 014f 0A       		.uleb128 0xa
 1386 0150 85030000 		.4byte	.LASF26
 1387 0154 01       		.byte	0x1
 1388 0155 6D01     		.2byte	0x16d
 1389 0157 00000000 		.4byte	.LFB5
 1390 015b 18000000 		.4byte	.LFE5-.LFB5
 1391 015f 01       		.uleb128 0x1
 1392 0160 9C       		.byte	0x9c
 1393 0161 0A       		.uleb128 0xa
 1394 0162 C4020000 		.4byte	.LASF27
 1395 0166 01       		.byte	0x1
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 41


 1396 0167 8701     		.2byte	0x187
 1397 0169 00000000 		.4byte	.LFB6
 1398 016d 14000000 		.4byte	.LFE6-.LFB6
 1399 0171 01       		.uleb128 0x1
 1400 0172 9C       		.byte	0x9c
 1401 0173 0A       		.uleb128 0xa
 1402 0174 E8020000 		.4byte	.LASF28
 1403 0178 01       		.byte	0x1
 1404 0179 A001     		.2byte	0x1a0
 1405 017b 00000000 		.4byte	.LFB7
 1406 017f 08000000 		.4byte	.LFE7-.LFB7
 1407 0183 01       		.uleb128 0x1
 1408 0184 9C       		.byte	0x9c
 1409 0185 0B       		.uleb128 0xb
 1410 0186 DD010000 		.4byte	.LASF30
 1411 018a 01       		.byte	0x1
 1412 018b C201     		.2byte	0x1c2
 1413 018d 83000000 		.4byte	0x83
 1414 0191 00000000 		.4byte	.LFB8
 1415 0195 48000000 		.4byte	.LFE8-.LFB8
 1416 0199 01       		.uleb128 0x1
 1417 019a 9C       		.byte	0x9c
 1418 019b BE010000 		.4byte	0x1be
 1419 019f 0C       		.uleb128 0xc
 1420 01a0 E0020000 		.4byte	.LASF32
 1421 01a4 01       		.byte	0x1
 1422 01a5 C201     		.2byte	0x1c2
 1423 01a7 83000000 		.4byte	0x83
 1424 01ab 02       		.uleb128 0x2
 1425 01ac 91       		.byte	0x91
 1426 01ad 6C       		.sleb128 -20
 1427 01ae 0D       		.uleb128 0xd
 1428 01af 41010000 		.4byte	.LASF29
 1429 01b3 01       		.byte	0x1
 1430 01b4 C401     		.2byte	0x1c4
 1431 01b6 83000000 		.4byte	0x83
 1432 01ba 02       		.uleb128 0x2
 1433 01bb 91       		.byte	0x91
 1434 01bc 74       		.sleb128 -12
 1435 01bd 00       		.byte	0
 1436 01be 0E       		.uleb128 0xe
 1437 01bf AE010000 		.4byte	.LASF31
 1438 01c3 01       		.byte	0x1
 1439 01c4 F801     		.2byte	0x1f8
 1440 01c6 8F000000 		.4byte	0x8f
 1441 01ca 00000000 		.4byte	.LFB9
 1442 01ce 44000000 		.4byte	.LFE9-.LFB9
 1443 01d2 01       		.uleb128 0x1
 1444 01d3 9C       		.byte	0x9c
 1445 01d4 F7010000 		.4byte	0x1f7
 1446 01d8 0C       		.uleb128 0xc
 1447 01d9 88020000 		.4byte	.LASF33
 1448 01dd 01       		.byte	0x1
 1449 01de F801     		.2byte	0x1f8
 1450 01e0 83000000 		.4byte	0x83
 1451 01e4 02       		.uleb128 0x2
 1452 01e5 91       		.byte	0x91
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 42


 1453 01e6 6C       		.sleb128 -20
 1454 01e7 0D       		.uleb128 0xd
 1455 01e8 68020000 		.4byte	.LASF34
 1456 01ec 01       		.byte	0x1
 1457 01ed FA01     		.2byte	0x1fa
 1458 01ef 83000000 		.4byte	0x83
 1459 01f3 02       		.uleb128 0x2
 1460 01f4 91       		.byte	0x91
 1461 01f5 74       		.sleb128 -12
 1462 01f6 00       		.byte	0
 1463 01f7 0F       		.uleb128 0xf
 1464 01f8 BE010000 		.4byte	.LASF36
 1465 01fc 01       		.byte	0x1
 1466 01fd 2502     		.2byte	0x225
 1467 01ff 00000000 		.4byte	.LFB10
 1468 0203 1C000000 		.4byte	.LFE10-.LFB10
 1469 0207 01       		.uleb128 0x1
 1470 0208 9C       		.byte	0x9c
 1471 0209 1D020000 		.4byte	0x21d
 1472 020d 0C       		.uleb128 0xc
 1473 020e D5020000 		.4byte	.LASF37
 1474 0212 01       		.byte	0x1
 1475 0213 2502     		.2byte	0x225
 1476 0215 83000000 		.4byte	0x83
 1477 0219 02       		.uleb128 0x2
 1478 021a 91       		.byte	0x91
 1479 021b 74       		.sleb128 -12
 1480 021c 00       		.byte	0
 1481 021d 0F       		.uleb128 0xf
 1482 021e 31010000 		.4byte	.LASF38
 1483 0222 01       		.byte	0x1
 1484 0223 5102     		.2byte	0x251
 1485 0225 00000000 		.4byte	.LFB11
 1486 0229 30000000 		.4byte	.LFE11-.LFB11
 1487 022d 01       		.uleb128 0x1
 1488 022e 9C       		.byte	0x9c
 1489 022f 43020000 		.4byte	0x243
 1490 0233 0C       		.uleb128 0xc
 1491 0234 F8010000 		.4byte	.LASF39
 1492 0238 01       		.byte	0x1
 1493 0239 5102     		.2byte	0x251
 1494 023b 83000000 		.4byte	0x83
 1495 023f 02       		.uleb128 0x2
 1496 0240 91       		.byte	0x91
 1497 0241 74       		.sleb128 -12
 1498 0242 00       		.byte	0
 1499 0243 0F       		.uleb128 0xf
 1500 0244 7F010000 		.4byte	.LASF40
 1501 0248 01       		.byte	0x1
 1502 0249 6602     		.2byte	0x266
 1503 024b 00000000 		.4byte	.LFB12
 1504 024f 2C000000 		.4byte	.LFE12-.LFB12
 1505 0253 01       		.uleb128 0x1
 1506 0254 9C       		.byte	0x9c
 1507 0255 69020000 		.4byte	0x269
 1508 0259 0C       		.uleb128 0xc
 1509 025a E1000000 		.4byte	.LASF41
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 43


 1510 025e 01       		.byte	0x1
 1511 025f 6602     		.2byte	0x266
 1512 0261 83000000 		.4byte	0x83
 1513 0265 02       		.uleb128 0x2
 1514 0266 91       		.byte	0x91
 1515 0267 74       		.sleb128 -12
 1516 0268 00       		.byte	0
 1517 0269 0F       		.uleb128 0xf
 1518 026a 21020000 		.4byte	.LASF42
 1519 026e 01       		.byte	0x1
 1520 026f 7E02     		.2byte	0x27e
 1521 0271 00000000 		.4byte	.LFB13
 1522 0275 1C000000 		.4byte	.LFE13-.LFB13
 1523 0279 01       		.uleb128 0x1
 1524 027a 9C       		.byte	0x9c
 1525 027b 8F020000 		.4byte	0x28f
 1526 027f 0C       		.uleb128 0xc
 1527 0280 D5020000 		.4byte	.LASF37
 1528 0284 01       		.byte	0x1
 1529 0285 7E02     		.2byte	0x27e
 1530 0287 83000000 		.4byte	0x83
 1531 028b 02       		.uleb128 0x2
 1532 028c 91       		.byte	0x91
 1533 028d 74       		.sleb128 -12
 1534 028e 00       		.byte	0
 1535 028f 0F       		.uleb128 0xf
 1536 0290 CE010000 		.4byte	.LASF43
 1537 0294 01       		.byte	0x1
 1538 0295 9502     		.2byte	0x295
 1539 0297 00000000 		.4byte	.LFB14
 1540 029b 1C000000 		.4byte	.LFE14-.LFB14
 1541 029f 01       		.uleb128 0x1
 1542 02a0 9C       		.byte	0x9c
 1543 02a1 B5020000 		.4byte	0x2b5
 1544 02a5 0C       		.uleb128 0xc
 1545 02a6 D5020000 		.4byte	.LASF37
 1546 02aa 01       		.byte	0x1
 1547 02ab 9502     		.2byte	0x295
 1548 02ad 83000000 		.4byte	0x83
 1549 02b1 02       		.uleb128 0x2
 1550 02b2 91       		.byte	0x91
 1551 02b3 74       		.sleb128 -12
 1552 02b4 00       		.byte	0
 1553 02b5 10       		.uleb128 0x10
 1554 02b6 23010000 		.4byte	.LASF44
 1555 02ba 01       		.byte	0x1
 1556 02bb B102     		.2byte	0x2b1
 1557 02bd 00000000 		.4byte	.LFB15
 1558 02c1 30000000 		.4byte	.LFE15-.LFB15
 1559 02c5 01       		.uleb128 0x1
 1560 02c6 9C       		.byte	0x9c
 1561 02c7 EA020000 		.4byte	0x2ea
 1562 02cb 0C       		.uleb128 0xc
 1563 02cc 88020000 		.4byte	.LASF33
 1564 02d0 01       		.byte	0x1
 1565 02d1 B102     		.2byte	0x2b1
 1566 02d3 83000000 		.4byte	0x83
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 44


 1567 02d7 02       		.uleb128 0x2
 1568 02d8 91       		.byte	0x91
 1569 02d9 74       		.sleb128 -12
 1570 02da 0C       		.uleb128 0xc
 1571 02db D4000000 		.4byte	.LASF45
 1572 02df 01       		.byte	0x1
 1573 02e0 B102     		.2byte	0x2b1
 1574 02e2 8F000000 		.4byte	0x8f
 1575 02e6 02       		.uleb128 0x2
 1576 02e7 91       		.byte	0x91
 1577 02e8 72       		.sleb128 -14
 1578 02e9 00       		.byte	0
 1579 02ea 10       		.uleb128 0x10
 1580 02eb 65010000 		.4byte	.LASF46
 1581 02ef 01       		.byte	0x1
 1582 02f0 D302     		.2byte	0x2d3
 1583 02f2 00000000 		.4byte	.LFB16
 1584 02f6 2C000000 		.4byte	.LFE16-.LFB16
 1585 02fa 01       		.uleb128 0x1
 1586 02fb 9C       		.byte	0x9c
 1587 02fc 1F030000 		.4byte	0x31f
 1588 0300 0C       		.uleb128 0xc
 1589 0301 88020000 		.4byte	.LASF33
 1590 0305 01       		.byte	0x1
 1591 0306 D302     		.2byte	0x2d3
 1592 0308 83000000 		.4byte	0x83
 1593 030c 02       		.uleb128 0x2
 1594 030d 91       		.byte	0x91
 1595 030e 74       		.sleb128 -12
 1596 030f 0C       		.uleb128 0xc
 1597 0310 01020000 		.4byte	.LASF47
 1598 0314 01       		.byte	0x1
 1599 0315 D302     		.2byte	0x2d3
 1600 0317 9B000000 		.4byte	0x9b
 1601 031b 02       		.uleb128 0x2
 1602 031c 91       		.byte	0x91
 1603 031d 70       		.sleb128 -16
 1604 031e 00       		.byte	0
 1605 031f 0E       		.uleb128 0xe
 1606 0320 EB000000 		.4byte	.LASF48
 1607 0324 01       		.byte	0x1
 1608 0325 F402     		.2byte	0x2f4
 1609 0327 8F000000 		.4byte	0x8f
 1610 032b 00000000 		.4byte	.LFB17
 1611 032f A4000000 		.4byte	.LFE17-.LFB17
 1612 0333 01       		.uleb128 0x1
 1613 0334 9C       		.byte	0x9c
 1614 0335 67030000 		.4byte	0x367
 1615 0339 0C       		.uleb128 0xc
 1616 033a 88020000 		.4byte	.LASF33
 1617 033e 01       		.byte	0x1
 1618 033f F402     		.2byte	0x2f4
 1619 0341 83000000 		.4byte	0x83
 1620 0345 02       		.uleb128 0x2
 1621 0346 91       		.byte	0x91
 1622 0347 6C       		.sleb128 -20
 1623 0348 0C       		.uleb128 0xc
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 45


 1624 0349 10020000 		.4byte	.LASF49
 1625 034d 01       		.byte	0x1
 1626 034e F402     		.2byte	0x2f4
 1627 0350 8F000000 		.4byte	0x8f
 1628 0354 02       		.uleb128 0x2
 1629 0355 91       		.byte	0x91
 1630 0356 6A       		.sleb128 -22
 1631 0357 0D       		.uleb128 0xd
 1632 0358 8D020000 		.4byte	.LASF50
 1633 035c 01       		.byte	0x1
 1634 035d F602     		.2byte	0x2f6
 1635 035f 8F000000 		.4byte	0x8f
 1636 0363 02       		.uleb128 0x2
 1637 0364 91       		.byte	0x91
 1638 0365 76       		.sleb128 -10
 1639 0366 00       		.byte	0
 1640 0367 0E       		.uleb128 0xe
 1641 0368 9D020000 		.4byte	.LASF51
 1642 036c 01       		.byte	0x1
 1643 036d 2A03     		.2byte	0x32a
 1644 036f 9B000000 		.4byte	0x9b
 1645 0373 00000000 		.4byte	.LFB18
 1646 0377 90000000 		.4byte	.LFE18-.LFB18
 1647 037b 01       		.uleb128 0x1
 1648 037c 9C       		.byte	0x9c
 1649 037d AF030000 		.4byte	0x3af
 1650 0381 0C       		.uleb128 0xc
 1651 0382 88020000 		.4byte	.LASF33
 1652 0386 01       		.byte	0x1
 1653 0387 2A03     		.2byte	0x32a
 1654 0389 83000000 		.4byte	0x83
 1655 038d 02       		.uleb128 0x2
 1656 038e 91       		.byte	0x91
 1657 038f 64       		.sleb128 -28
 1658 0390 0C       		.uleb128 0xc
 1659 0391 10020000 		.4byte	.LASF49
 1660 0395 01       		.byte	0x1
 1661 0396 2A03     		.2byte	0x32a
 1662 0398 8F000000 		.4byte	0x8f
 1663 039c 02       		.uleb128 0x2
 1664 039d 91       		.byte	0x91
 1665 039e 62       		.sleb128 -30
 1666 039f 0D       		.uleb128 0xd
 1667 03a0 FF000000 		.4byte	.LASF52
 1668 03a4 01       		.byte	0x1
 1669 03a5 2C03     		.2byte	0x32c
 1670 03a7 C1000000 		.4byte	0xc1
 1671 03ab 02       		.uleb128 0x2
 1672 03ac 91       		.byte	0x91
 1673 03ad 68       		.sleb128 -24
 1674 03ae 00       		.byte	0
 1675 03af 0E       		.uleb128 0xe
 1676 03b0 B1020000 		.4byte	.LASF53
 1677 03b4 01       		.byte	0x1
 1678 03b5 5703     		.2byte	0x357
 1679 03b7 A7000000 		.4byte	0xa7
 1680 03bb 00000000 		.4byte	.LFB19
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 46


 1681 03bf 80000000 		.4byte	.LFE19-.LFB19
 1682 03c3 01       		.uleb128 0x1
 1683 03c4 9C       		.byte	0x9c
 1684 03c5 F7030000 		.4byte	0x3f7
 1685 03c9 0C       		.uleb128 0xc
 1686 03ca 88020000 		.4byte	.LASF33
 1687 03ce 01       		.byte	0x1
 1688 03cf 5703     		.2byte	0x357
 1689 03d1 83000000 		.4byte	0x83
 1690 03d5 02       		.uleb128 0x2
 1691 03d6 91       		.byte	0x91
 1692 03d7 64       		.sleb128 -28
 1693 03d8 0C       		.uleb128 0xc
 1694 03d9 10020000 		.4byte	.LASF49
 1695 03dd 01       		.byte	0x1
 1696 03de 5703     		.2byte	0x357
 1697 03e0 8F000000 		.4byte	0x8f
 1698 03e4 02       		.uleb128 0x2
 1699 03e5 91       		.byte	0x91
 1700 03e6 62       		.sleb128 -30
 1701 03e7 0D       		.uleb128 0xd
 1702 03e8 82020000 		.4byte	.LASF54
 1703 03ec 01       		.byte	0x1
 1704 03ed 5903     		.2byte	0x359
 1705 03ef A7000000 		.4byte	0xa7
 1706 03f3 02       		.uleb128 0x2
 1707 03f4 91       		.byte	0x91
 1708 03f5 6C       		.sleb128 -20
 1709 03f6 00       		.byte	0
 1710 03f7 11       		.uleb128 0x11
 1711 03f8 83000000 		.4byte	0x83
 1712 03fc 07040000 		.4byte	0x407
 1713 0400 12       		.uleb128 0x12
 1714 0401 E5000000 		.4byte	0xe5
 1715 0405 00       		.byte	0
 1716 0406 00       		.byte	0
 1717 0407 08       		.uleb128 0x8
 1718 0408 0E000000 		.4byte	.LASF55
 1719 040c 01       		.byte	0x1
 1720 040d 21       		.byte	0x21
 1721 040e 18040000 		.4byte	0x418
 1722 0412 05       		.uleb128 0x5
 1723 0413 03       		.byte	0x3
 1724 0414 00000000 		.4byte	ADC_channelsConfig
 1725 0418 13       		.uleb128 0x13
 1726 0419 F7030000 		.4byte	0x3f7
 1727 041d 14       		.uleb128 0x14
 1728 041e 73030000 		.4byte	.LASF56
 1729 0422 01       		.byte	0x1
 1730 0423 18       		.byte	0x18
 1731 0424 6B000000 		.4byte	0x6b
 1732 0428 05       		.uleb128 0x5
 1733 0429 03       		.byte	0x3
 1734 042a 00000000 		.4byte	ADC_initVar
 1735 042e 11       		.uleb128 0x11
 1736 042f 8F000000 		.4byte	0x8f
 1737 0433 3E040000 		.4byte	0x43e
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 47


 1738 0437 12       		.uleb128 0x12
 1739 0438 E5000000 		.4byte	0xe5
 1740 043c 00       		.byte	0
 1741 043d 00       		.byte	0
 1742 043e 14       		.uleb128 0x14
 1743 043f 50010000 		.4byte	.LASF57
 1744 0443 01       		.byte	0x1
 1745 0444 19       		.byte	0x19
 1746 0445 4F040000 		.4byte	0x44f
 1747 0449 05       		.uleb128 0x5
 1748 044a 03       		.byte	0x3
 1749 044b 00000000 		.4byte	ADC_offset
 1750 044f 05       		.uleb128 0x5
 1751 0450 2E040000 		.4byte	0x42e
 1752 0454 11       		.uleb128 0x11
 1753 0455 9B000000 		.4byte	0x9b
 1754 0459 64040000 		.4byte	0x464
 1755 045d 12       		.uleb128 0x12
 1756 045e E5000000 		.4byte	0xe5
 1757 0462 00       		.byte	0
 1758 0463 00       		.byte	0
 1759 0464 14       		.uleb128 0x14
 1760 0465 45030000 		.4byte	.LASF58
 1761 0469 01       		.byte	0x1
 1762 046a 1A       		.byte	0x1a
 1763 046b 75040000 		.4byte	0x475
 1764 046f 05       		.uleb128 0x5
 1765 0470 03       		.byte	0x3
 1766 0471 00000000 		.4byte	ADC_countsPer10Volt
 1767 0475 05       		.uleb128 0x5
 1768 0476 54040000 		.4byte	0x454
 1769 047a 00       		.byte	0
 1770              		.section	.debug_abbrev,"",%progbits
 1771              	.Ldebug_abbrev0:
 1772 0000 01       		.uleb128 0x1
 1773 0001 11       		.uleb128 0x11
 1774 0002 01       		.byte	0x1
 1775 0003 25       		.uleb128 0x25
 1776 0004 0E       		.uleb128 0xe
 1777 0005 13       		.uleb128 0x13
 1778 0006 0B       		.uleb128 0xb
 1779 0007 03       		.uleb128 0x3
 1780 0008 0E       		.uleb128 0xe
 1781 0009 1B       		.uleb128 0x1b
 1782 000a 0E       		.uleb128 0xe
 1783 000b 55       		.uleb128 0x55
 1784 000c 17       		.uleb128 0x17
 1785 000d 11       		.uleb128 0x11
 1786 000e 01       		.uleb128 0x1
 1787 000f 10       		.uleb128 0x10
 1788 0010 17       		.uleb128 0x17
 1789 0011 00       		.byte	0
 1790 0012 00       		.byte	0
 1791 0013 02       		.uleb128 0x2
 1792 0014 24       		.uleb128 0x24
 1793 0015 00       		.byte	0
 1794 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 48


 1795 0017 0B       		.uleb128 0xb
 1796 0018 3E       		.uleb128 0x3e
 1797 0019 0B       		.uleb128 0xb
 1798 001a 03       		.uleb128 0x3
 1799 001b 0E       		.uleb128 0xe
 1800 001c 00       		.byte	0
 1801 001d 00       		.byte	0
 1802 001e 03       		.uleb128 0x3
 1803 001f 24       		.uleb128 0x24
 1804 0020 00       		.byte	0
 1805 0021 0B       		.uleb128 0xb
 1806 0022 0B       		.uleb128 0xb
 1807 0023 3E       		.uleb128 0x3e
 1808 0024 0B       		.uleb128 0xb
 1809 0025 03       		.uleb128 0x3
 1810 0026 08       		.uleb128 0x8
 1811 0027 00       		.byte	0
 1812 0028 00       		.byte	0
 1813 0029 04       		.uleb128 0x4
 1814 002a 16       		.uleb128 0x16
 1815 002b 00       		.byte	0
 1816 002c 03       		.uleb128 0x3
 1817 002d 0E       		.uleb128 0xe
 1818 002e 3A       		.uleb128 0x3a
 1819 002f 0B       		.uleb128 0xb
 1820 0030 3B       		.uleb128 0x3b
 1821 0031 05       		.uleb128 0x5
 1822 0032 49       		.uleb128 0x49
 1823 0033 13       		.uleb128 0x13
 1824 0034 00       		.byte	0
 1825 0035 00       		.byte	0
 1826 0036 05       		.uleb128 0x5
 1827 0037 35       		.uleb128 0x35
 1828 0038 00       		.byte	0
 1829 0039 49       		.uleb128 0x49
 1830 003a 13       		.uleb128 0x13
 1831 003b 00       		.byte	0
 1832 003c 00       		.byte	0
 1833 003d 06       		.uleb128 0x6
 1834 003e 2E       		.uleb128 0x2e
 1835 003f 00       		.byte	0
 1836 0040 3F       		.uleb128 0x3f
 1837 0041 19       		.uleb128 0x19
 1838 0042 03       		.uleb128 0x3
 1839 0043 0E       		.uleb128 0xe
 1840 0044 3A       		.uleb128 0x3a
 1841 0045 0B       		.uleb128 0xb
 1842 0046 3B       		.uleb128 0x3b
 1843 0047 0B       		.uleb128 0xb
 1844 0048 27       		.uleb128 0x27
 1845 0049 19       		.uleb128 0x19
 1846 004a 11       		.uleb128 0x11
 1847 004b 01       		.uleb128 0x1
 1848 004c 12       		.uleb128 0x12
 1849 004d 06       		.uleb128 0x6
 1850 004e 40       		.uleb128 0x40
 1851 004f 18       		.uleb128 0x18
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 49


 1852 0050 9642     		.uleb128 0x2116
 1853 0052 19       		.uleb128 0x19
 1854 0053 00       		.byte	0
 1855 0054 00       		.byte	0
 1856 0055 07       		.uleb128 0x7
 1857 0056 2E       		.uleb128 0x2e
 1858 0057 01       		.byte	0x1
 1859 0058 3F       		.uleb128 0x3f
 1860 0059 19       		.uleb128 0x19
 1861 005a 03       		.uleb128 0x3
 1862 005b 0E       		.uleb128 0xe
 1863 005c 3A       		.uleb128 0x3a
 1864 005d 0B       		.uleb128 0xb
 1865 005e 3B       		.uleb128 0x3b
 1866 005f 0B       		.uleb128 0xb
 1867 0060 27       		.uleb128 0x27
 1868 0061 19       		.uleb128 0x19
 1869 0062 11       		.uleb128 0x11
 1870 0063 01       		.uleb128 0x1
 1871 0064 12       		.uleb128 0x12
 1872 0065 06       		.uleb128 0x6
 1873 0066 40       		.uleb128 0x40
 1874 0067 18       		.uleb128 0x18
 1875 0068 9642     		.uleb128 0x2116
 1876 006a 19       		.uleb128 0x19
 1877 006b 01       		.uleb128 0x1
 1878 006c 13       		.uleb128 0x13
 1879 006d 00       		.byte	0
 1880 006e 00       		.byte	0
 1881 006f 08       		.uleb128 0x8
 1882 0070 34       		.uleb128 0x34
 1883 0071 00       		.byte	0
 1884 0072 03       		.uleb128 0x3
 1885 0073 0E       		.uleb128 0xe
 1886 0074 3A       		.uleb128 0x3a
 1887 0075 0B       		.uleb128 0xb
 1888 0076 3B       		.uleb128 0x3b
 1889 0077 0B       		.uleb128 0xb
 1890 0078 49       		.uleb128 0x49
 1891 0079 13       		.uleb128 0x13
 1892 007a 02       		.uleb128 0x2
 1893 007b 18       		.uleb128 0x18
 1894 007c 00       		.byte	0
 1895 007d 00       		.byte	0
 1896 007e 09       		.uleb128 0x9
 1897 007f 2E       		.uleb128 0x2e
 1898 0080 00       		.byte	0
 1899 0081 3F       		.uleb128 0x3f
 1900 0082 19       		.uleb128 0x19
 1901 0083 03       		.uleb128 0x3
 1902 0084 0E       		.uleb128 0xe
 1903 0085 3A       		.uleb128 0x3a
 1904 0086 0B       		.uleb128 0xb
 1905 0087 3B       		.uleb128 0x3b
 1906 0088 05       		.uleb128 0x5
 1907 0089 27       		.uleb128 0x27
 1908 008a 19       		.uleb128 0x19
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 50


 1909 008b 11       		.uleb128 0x11
 1910 008c 01       		.uleb128 0x1
 1911 008d 12       		.uleb128 0x12
 1912 008e 06       		.uleb128 0x6
 1913 008f 40       		.uleb128 0x40
 1914 0090 18       		.uleb128 0x18
 1915 0091 9642     		.uleb128 0x2116
 1916 0093 19       		.uleb128 0x19
 1917 0094 00       		.byte	0
 1918 0095 00       		.byte	0
 1919 0096 0A       		.uleb128 0xa
 1920 0097 2E       		.uleb128 0x2e
 1921 0098 00       		.byte	0
 1922 0099 3F       		.uleb128 0x3f
 1923 009a 19       		.uleb128 0x19
 1924 009b 03       		.uleb128 0x3
 1925 009c 0E       		.uleb128 0xe
 1926 009d 3A       		.uleb128 0x3a
 1927 009e 0B       		.uleb128 0xb
 1928 009f 3B       		.uleb128 0x3b
 1929 00a0 05       		.uleb128 0x5
 1930 00a1 27       		.uleb128 0x27
 1931 00a2 19       		.uleb128 0x19
 1932 00a3 11       		.uleb128 0x11
 1933 00a4 01       		.uleb128 0x1
 1934 00a5 12       		.uleb128 0x12
 1935 00a6 06       		.uleb128 0x6
 1936 00a7 40       		.uleb128 0x40
 1937 00a8 18       		.uleb128 0x18
 1938 00a9 9742     		.uleb128 0x2117
 1939 00ab 19       		.uleb128 0x19
 1940 00ac 00       		.byte	0
 1941 00ad 00       		.byte	0
 1942 00ae 0B       		.uleb128 0xb
 1943 00af 2E       		.uleb128 0x2e
 1944 00b0 01       		.byte	0x1
 1945 00b1 3F       		.uleb128 0x3f
 1946 00b2 19       		.uleb128 0x19
 1947 00b3 03       		.uleb128 0x3
 1948 00b4 0E       		.uleb128 0xe
 1949 00b5 3A       		.uleb128 0x3a
 1950 00b6 0B       		.uleb128 0xb
 1951 00b7 3B       		.uleb128 0x3b
 1952 00b8 05       		.uleb128 0x5
 1953 00b9 27       		.uleb128 0x27
 1954 00ba 19       		.uleb128 0x19
 1955 00bb 49       		.uleb128 0x49
 1956 00bc 13       		.uleb128 0x13
 1957 00bd 11       		.uleb128 0x11
 1958 00be 01       		.uleb128 0x1
 1959 00bf 12       		.uleb128 0x12
 1960 00c0 06       		.uleb128 0x6
 1961 00c1 40       		.uleb128 0x40
 1962 00c2 18       		.uleb128 0x18
 1963 00c3 9742     		.uleb128 0x2117
 1964 00c5 19       		.uleb128 0x19
 1965 00c6 01       		.uleb128 0x1
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 51


 1966 00c7 13       		.uleb128 0x13
 1967 00c8 00       		.byte	0
 1968 00c9 00       		.byte	0
 1969 00ca 0C       		.uleb128 0xc
 1970 00cb 05       		.uleb128 0x5
 1971 00cc 00       		.byte	0
 1972 00cd 03       		.uleb128 0x3
 1973 00ce 0E       		.uleb128 0xe
 1974 00cf 3A       		.uleb128 0x3a
 1975 00d0 0B       		.uleb128 0xb
 1976 00d1 3B       		.uleb128 0x3b
 1977 00d2 05       		.uleb128 0x5
 1978 00d3 49       		.uleb128 0x49
 1979 00d4 13       		.uleb128 0x13
 1980 00d5 02       		.uleb128 0x2
 1981 00d6 18       		.uleb128 0x18
 1982 00d7 00       		.byte	0
 1983 00d8 00       		.byte	0
 1984 00d9 0D       		.uleb128 0xd
 1985 00da 34       		.uleb128 0x34
 1986 00db 00       		.byte	0
 1987 00dc 03       		.uleb128 0x3
 1988 00dd 0E       		.uleb128 0xe
 1989 00de 3A       		.uleb128 0x3a
 1990 00df 0B       		.uleb128 0xb
 1991 00e0 3B       		.uleb128 0x3b
 1992 00e1 05       		.uleb128 0x5
 1993 00e2 49       		.uleb128 0x49
 1994 00e3 13       		.uleb128 0x13
 1995 00e4 02       		.uleb128 0x2
 1996 00e5 18       		.uleb128 0x18
 1997 00e6 00       		.byte	0
 1998 00e7 00       		.byte	0
 1999 00e8 0E       		.uleb128 0xe
 2000 00e9 2E       		.uleb128 0x2e
 2001 00ea 01       		.byte	0x1
 2002 00eb 3F       		.uleb128 0x3f
 2003 00ec 19       		.uleb128 0x19
 2004 00ed 03       		.uleb128 0x3
 2005 00ee 0E       		.uleb128 0xe
 2006 00ef 3A       		.uleb128 0x3a
 2007 00f0 0B       		.uleb128 0xb
 2008 00f1 3B       		.uleb128 0x3b
 2009 00f2 05       		.uleb128 0x5
 2010 00f3 27       		.uleb128 0x27
 2011 00f4 19       		.uleb128 0x19
 2012 00f5 49       		.uleb128 0x49
 2013 00f6 13       		.uleb128 0x13
 2014 00f7 11       		.uleb128 0x11
 2015 00f8 01       		.uleb128 0x1
 2016 00f9 12       		.uleb128 0x12
 2017 00fa 06       		.uleb128 0x6
 2018 00fb 40       		.uleb128 0x40
 2019 00fc 18       		.uleb128 0x18
 2020 00fd 9642     		.uleb128 0x2116
 2021 00ff 19       		.uleb128 0x19
 2022 0100 01       		.uleb128 0x1
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 52


 2023 0101 13       		.uleb128 0x13
 2024 0102 00       		.byte	0
 2025 0103 00       		.byte	0
 2026 0104 0F       		.uleb128 0xf
 2027 0105 2E       		.uleb128 0x2e
 2028 0106 01       		.byte	0x1
 2029 0107 3F       		.uleb128 0x3f
 2030 0108 19       		.uleb128 0x19
 2031 0109 03       		.uleb128 0x3
 2032 010a 0E       		.uleb128 0xe
 2033 010b 3A       		.uleb128 0x3a
 2034 010c 0B       		.uleb128 0xb
 2035 010d 3B       		.uleb128 0x3b
 2036 010e 05       		.uleb128 0x5
 2037 010f 27       		.uleb128 0x27
 2038 0110 19       		.uleb128 0x19
 2039 0111 11       		.uleb128 0x11
 2040 0112 01       		.uleb128 0x1
 2041 0113 12       		.uleb128 0x12
 2042 0114 06       		.uleb128 0x6
 2043 0115 40       		.uleb128 0x40
 2044 0116 18       		.uleb128 0x18
 2045 0117 9742     		.uleb128 0x2117
 2046 0119 19       		.uleb128 0x19
 2047 011a 01       		.uleb128 0x1
 2048 011b 13       		.uleb128 0x13
 2049 011c 00       		.byte	0
 2050 011d 00       		.byte	0
 2051 011e 10       		.uleb128 0x10
 2052 011f 2E       		.uleb128 0x2e
 2053 0120 01       		.byte	0x1
 2054 0121 3F       		.uleb128 0x3f
 2055 0122 19       		.uleb128 0x19
 2056 0123 03       		.uleb128 0x3
 2057 0124 0E       		.uleb128 0xe
 2058 0125 3A       		.uleb128 0x3a
 2059 0126 0B       		.uleb128 0xb
 2060 0127 3B       		.uleb128 0x3b
 2061 0128 05       		.uleb128 0x5
 2062 0129 27       		.uleb128 0x27
 2063 012a 19       		.uleb128 0x19
 2064 012b 11       		.uleb128 0x11
 2065 012c 01       		.uleb128 0x1
 2066 012d 12       		.uleb128 0x12
 2067 012e 06       		.uleb128 0x6
 2068 012f 40       		.uleb128 0x40
 2069 0130 18       		.uleb128 0x18
 2070 0131 9642     		.uleb128 0x2116
 2071 0133 19       		.uleb128 0x19
 2072 0134 01       		.uleb128 0x1
 2073 0135 13       		.uleb128 0x13
 2074 0136 00       		.byte	0
 2075 0137 00       		.byte	0
 2076 0138 11       		.uleb128 0x11
 2077 0139 01       		.uleb128 0x1
 2078 013a 01       		.byte	0x1
 2079 013b 49       		.uleb128 0x49
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 53


 2080 013c 13       		.uleb128 0x13
 2081 013d 01       		.uleb128 0x1
 2082 013e 13       		.uleb128 0x13
 2083 013f 00       		.byte	0
 2084 0140 00       		.byte	0
 2085 0141 12       		.uleb128 0x12
 2086 0142 21       		.uleb128 0x21
 2087 0143 00       		.byte	0
 2088 0144 49       		.uleb128 0x49
 2089 0145 13       		.uleb128 0x13
 2090 0146 2F       		.uleb128 0x2f
 2091 0147 0B       		.uleb128 0xb
 2092 0148 00       		.byte	0
 2093 0149 00       		.byte	0
 2094 014a 13       		.uleb128 0x13
 2095 014b 26       		.uleb128 0x26
 2096 014c 00       		.byte	0
 2097 014d 49       		.uleb128 0x49
 2098 014e 13       		.uleb128 0x13
 2099 014f 00       		.byte	0
 2100 0150 00       		.byte	0
 2101 0151 14       		.uleb128 0x14
 2102 0152 34       		.uleb128 0x34
 2103 0153 00       		.byte	0
 2104 0154 03       		.uleb128 0x3
 2105 0155 0E       		.uleb128 0xe
 2106 0156 3A       		.uleb128 0x3a
 2107 0157 0B       		.uleb128 0xb
 2108 0158 3B       		.uleb128 0x3b
 2109 0159 0B       		.uleb128 0xb
 2110 015a 49       		.uleb128 0x49
 2111 015b 13       		.uleb128 0x13
 2112 015c 3F       		.uleb128 0x3f
 2113 015d 19       		.uleb128 0x19
 2114 015e 02       		.uleb128 0x2
 2115 015f 18       		.uleb128 0x18
 2116 0160 00       		.byte	0
 2117 0161 00       		.byte	0
 2118 0162 00       		.byte	0
 2119              		.section	.debug_aranges,"",%progbits
 2120 0000 A4000000 		.4byte	0xa4
 2121 0004 0200     		.2byte	0x2
 2122 0006 00000000 		.4byte	.Ldebug_info0
 2123 000a 04       		.byte	0x4
 2124 000b 00       		.byte	0
 2125 000c 0000     		.2byte	0
 2126 000e 0000     		.2byte	0
 2127 0010 00000000 		.4byte	.LFB2
 2128 0014 24000000 		.4byte	.LFE2-.LFB2
 2129 0018 00000000 		.4byte	.LFB3
 2130 001c C4010000 		.4byte	.LFE3-.LFB3
 2131 0020 00000000 		.4byte	.LFB4
 2132 0024 38000000 		.4byte	.LFE4-.LFB4
 2133 0028 00000000 		.4byte	.LFB5
 2134 002c 18000000 		.4byte	.LFE5-.LFB5
 2135 0030 00000000 		.4byte	.LFB6
 2136 0034 14000000 		.4byte	.LFE6-.LFB6
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 54


 2137 0038 00000000 		.4byte	.LFB7
 2138 003c 08000000 		.4byte	.LFE7-.LFB7
 2139 0040 00000000 		.4byte	.LFB8
 2140 0044 48000000 		.4byte	.LFE8-.LFB8
 2141 0048 00000000 		.4byte	.LFB9
 2142 004c 44000000 		.4byte	.LFE9-.LFB9
 2143 0050 00000000 		.4byte	.LFB10
 2144 0054 1C000000 		.4byte	.LFE10-.LFB10
 2145 0058 00000000 		.4byte	.LFB11
 2146 005c 30000000 		.4byte	.LFE11-.LFB11
 2147 0060 00000000 		.4byte	.LFB12
 2148 0064 2C000000 		.4byte	.LFE12-.LFB12
 2149 0068 00000000 		.4byte	.LFB13
 2150 006c 1C000000 		.4byte	.LFE13-.LFB13
 2151 0070 00000000 		.4byte	.LFB14
 2152 0074 1C000000 		.4byte	.LFE14-.LFB14
 2153 0078 00000000 		.4byte	.LFB15
 2154 007c 30000000 		.4byte	.LFE15-.LFB15
 2155 0080 00000000 		.4byte	.LFB16
 2156 0084 2C000000 		.4byte	.LFE16-.LFB16
 2157 0088 00000000 		.4byte	.LFB17
 2158 008c A4000000 		.4byte	.LFE17-.LFB17
 2159 0090 00000000 		.4byte	.LFB18
 2160 0094 90000000 		.4byte	.LFE18-.LFB18
 2161 0098 00000000 		.4byte	.LFB19
 2162 009c 80000000 		.4byte	.LFE19-.LFB19
 2163 00a0 00000000 		.4byte	0
 2164 00a4 00000000 		.4byte	0
 2165              		.section	.debug_ranges,"",%progbits
 2166              	.Ldebug_ranges0:
 2167 0000 00000000 		.4byte	.LFB2
 2168 0004 24000000 		.4byte	.LFE2
 2169 0008 00000000 		.4byte	.LFB3
 2170 000c C4010000 		.4byte	.LFE3
 2171 0010 00000000 		.4byte	.LFB4
 2172 0014 38000000 		.4byte	.LFE4
 2173 0018 00000000 		.4byte	.LFB5
 2174 001c 18000000 		.4byte	.LFE5
 2175 0020 00000000 		.4byte	.LFB6
 2176 0024 14000000 		.4byte	.LFE6
 2177 0028 00000000 		.4byte	.LFB7
 2178 002c 08000000 		.4byte	.LFE7
 2179 0030 00000000 		.4byte	.LFB8
 2180 0034 48000000 		.4byte	.LFE8
 2181 0038 00000000 		.4byte	.LFB9
 2182 003c 44000000 		.4byte	.LFE9
 2183 0040 00000000 		.4byte	.LFB10
 2184 0044 1C000000 		.4byte	.LFE10
 2185 0048 00000000 		.4byte	.LFB11
 2186 004c 30000000 		.4byte	.LFE11
 2187 0050 00000000 		.4byte	.LFB12
 2188 0054 2C000000 		.4byte	.LFE12
 2189 0058 00000000 		.4byte	.LFB13
 2190 005c 1C000000 		.4byte	.LFE13
 2191 0060 00000000 		.4byte	.LFB14
 2192 0064 1C000000 		.4byte	.LFE14
 2193 0068 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 55


 2194 006c 30000000 		.4byte	.LFE15
 2195 0070 00000000 		.4byte	.LFB16
 2196 0074 2C000000 		.4byte	.LFE16
 2197 0078 00000000 		.4byte	.LFB17
 2198 007c A4000000 		.4byte	.LFE17
 2199 0080 00000000 		.4byte	.LFB18
 2200 0084 90000000 		.4byte	.LFE18
 2201 0088 00000000 		.4byte	.LFB19
 2202 008c 80000000 		.4byte	.LFE19
 2203 0090 00000000 		.4byte	0
 2204 0094 00000000 		.4byte	0
 2205              		.section	.debug_line,"",%progbits
 2206              	.Ldebug_line0:
 2207 0000 99020000 		.section	.debug_str,"MS",%progbits,1
 2207      02004200 
 2207      00000201 
 2207      FB0E0D00 
 2207      01010101 
 2208              	.LASF6:
 2209 0000 6C6F6E67 		.ascii	"long long int\000"
 2209      206C6F6E 
 2209      6720696E 
 2209      7400
 2210              	.LASF55:
 2211 000e 4144435F 		.ascii	"ADC_channelsConfig\000"
 2211      6368616E 
 2211      6E656C73 
 2211      436F6E66 
 2211      696700
 2212              	.LASF19:
 2213 0021 72656733 		.ascii	"reg32\000"
 2213      3200
 2214              	.LASF59:
 2215 0027 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2215      4320342E 
 2215      392E3320 
 2215      32303135 
 2215      30333033 
 2216 005a 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2216      20726576 
 2216      6973696F 
 2216      6E203232 
 2216      31323230 
 2217 008d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2217      66756E63 
 2217      74696F6E 
 2217      2D736563 
 2217      74696F6E 
 2218              	.LASF60:
 2219 00b5 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC.c\000"
 2219      6E657261 
 2219      7465645F 
 2219      536F7572 
 2219      63655C50 
 2220              	.LASF45:
 2221 00d4 6F666673 		.ascii	"offset\000"
 2221      657400
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 56


 2222              	.LASF15:
 2223 00db 666C6F61 		.ascii	"float\000"
 2223      7400
 2224              	.LASF41:
 2225 00e1 68696768 		.ascii	"highLimit\000"
 2225      4C696D69 
 2225      7400
 2226              	.LASF48:
 2227 00eb 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2227      436F756E 
 2227      7473546F 
 2227      5F6D566F 
 2227      6C747300 
 2228              	.LASF52:
 2229 00ff 75566F6C 		.ascii	"uVolts\000"
 2229      747300
 2230              	.LASF3:
 2231 0106 73686F72 		.ascii	"short unsigned int\000"
 2231      7420756E 
 2231      7369676E 
 2231      65642069 
 2231      6E7400
 2232              	.LASF2:
 2233 0119 73686F72 		.ascii	"short int\000"
 2233      7420696E 
 2233      7400
 2234              	.LASF44:
 2235 0123 4144435F 		.ascii	"ADC_SetOffset\000"
 2235      5365744F 
 2235      66667365 
 2235      7400
 2236              	.LASF38:
 2237 0131 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2237      5365744C 
 2237      6F774C69 
 2237      6D697400 
 2238              	.LASF29:
 2239 0141 73746174 		.ascii	"status\000"
 2239      757300
 2240              	.LASF14:
 2241 0148 666C6F61 		.ascii	"float32\000"
 2241      74333200 
 2242              	.LASF57:
 2243 0150 4144435F 		.ascii	"ADC_offset\000"
 2243      6F666673 
 2243      657400
 2244              	.LASF22:
 2245 015b 746D7052 		.ascii	"tmpRegVal\000"
 2245      65675661 
 2245      6C00
 2246              	.LASF46:
 2247 0165 4144435F 		.ascii	"ADC_SetGain\000"
 2247      53657447 
 2247      61696E00 
 2248              	.LASF1:
 2249 0171 756E7369 		.ascii	"unsigned char\000"
 2249      676E6564 
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 57


 2249      20636861 
 2249      7200
 2250              	.LASF40:
 2251 017f 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2251      53657448 
 2251      6967684C 
 2251      696D6974 
 2251      00
 2252              	.LASF12:
 2253 0190 696E7431 		.ascii	"int16\000"
 2253      3600
 2254              	.LASF5:
 2255 0196 6C6F6E67 		.ascii	"long unsigned int\000"
 2255      20756E73 
 2255      69676E65 
 2255      6420696E 
 2255      7400
 2256              	.LASF13:
 2257 01a8 696E7433 		.ascii	"int32\000"
 2257      3200
 2258              	.LASF31:
 2259 01ae 4144435F 		.ascii	"ADC_GetResult16\000"
 2259      47657452 
 2259      6573756C 
 2259      74313600 
 2260              	.LASF36:
 2261 01be 4144435F 		.ascii	"ADC_SetChanMask\000"
 2261      53657443 
 2261      68616E4D 
 2261      61736B00 
 2262              	.LASF43:
 2263 01ce 4144435F 		.ascii	"ADC_SetSatMask\000"
 2263      53657453 
 2263      61744D61 
 2263      736B00
 2264              	.LASF30:
 2265 01dd 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2265      4973456E 
 2265      64436F6E 
 2265      76657273 
 2265      696F6E00 
 2266              	.LASF16:
 2267 01f1 646F7562 		.ascii	"double\000"
 2267      6C6500
 2268              	.LASF39:
 2269 01f8 6C6F774C 		.ascii	"lowLimit\000"
 2269      696D6974 
 2269      00
 2270              	.LASF47:
 2271 0201 61646347 		.ascii	"adcGain\000"
 2271      61696E00 
 2272              	.LASF10:
 2273 0209 75696E74 		.ascii	"uint16\000"
 2273      313600
 2274              	.LASF49:
 2275 0210 61646343 		.ascii	"adcCounts\000"
 2275      6F756E74 
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 58


 2275      7300
 2276              	.LASF11:
 2277 021a 75696E74 		.ascii	"uint32\000"
 2277      333200
 2278              	.LASF42:
 2279 0221 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2279      5365744C 
 2279      696D6974 
 2279      4D61736B 
 2279      00
 2280              	.LASF8:
 2281 0232 756E7369 		.ascii	"unsigned int\000"
 2281      676E6564 
 2281      20696E74 
 2281      00
 2282              	.LASF25:
 2283 023f 4144435F 		.ascii	"ADC_Enable\000"
 2283      456E6162 
 2283      6C6500
 2284              	.LASF23:
 2285 024a 636F756E 		.ascii	"counts\000"
 2285      747300
 2286              	.LASF7:
 2287 0251 6C6F6E67 		.ascii	"long long unsigned int\000"
 2287      206C6F6E 
 2287      6720756E 
 2287      7369676E 
 2287      65642069 
 2288              	.LASF34:
 2289 0268 72657375 		.ascii	"result\000"
 2289      6C7400
 2290              	.LASF24:
 2291 026f 4144435F 		.ascii	"ADC_Start\000"
 2291      53746172 
 2291      7400
 2292              	.LASF35:
 2293 0279 4144435F 		.ascii	"ADC_Init\000"
 2293      496E6974 
 2293      00
 2294              	.LASF54:
 2295 0282 766F6C74 		.ascii	"volts\000"
 2295      7300
 2296              	.LASF33:
 2297 0288 6368616E 		.ascii	"chan\000"
 2297      00
 2298              	.LASF50:
 2299 028d 6D566F6C 		.ascii	"mVolts\000"
 2299      747300
 2300              	.LASF20:
 2301 0294 73697A65 		.ascii	"sizetype\000"
 2301      74797065 
 2301      00
 2302              	.LASF51:
 2303 029d 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2303      436F756E 
 2303      7473546F 
 2303      5F75566F 
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 59


 2303      6C747300 
 2304              	.LASF53:
 2305 02b1 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2305      436F756E 
 2305      7473546F 
 2305      5F566F6C 
 2305      747300
 2306              	.LASF27:
 2307 02c4 4144435F 		.ascii	"ADC_StartConvert\000"
 2307      53746172 
 2307      74436F6E 
 2307      76657274 
 2307      00
 2308              	.LASF37:
 2309 02d5 6D61736B 		.ascii	"mask\000"
 2309      00
 2310              	.LASF21:
 2311 02da 63684E75 		.ascii	"chNum\000"
 2311      6D00
 2312              	.LASF32:
 2313 02e0 7265744D 		.ascii	"retMode\000"
 2313      6F646500 
 2314              	.LASF28:
 2315 02e8 4144435F 		.ascii	"ADC_StopConvert\000"
 2315      53746F70 
 2315      436F6E76 
 2315      65727400 
 2316              	.LASF61:
 2317 02f8 433A5C55 		.ascii	"C:\\Users\\Rohit\\Documents\\ALL DESKTOP JUNK\\9047"
 2317      73657273 
 2317      5C526F68 
 2317      69745C44 
 2317      6F63756D 
 2318 0326 2D2D2D4C 		.ascii	"---Lab-2---group-7.cydsn\000"
 2318      61622D32 
 2318      2D2D2D67 
 2318      726F7570 
 2318      2D372E63 
 2319              	.LASF9:
 2320 033f 75696E74 		.ascii	"uint8\000"
 2320      3800
 2321              	.LASF58:
 2322 0345 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2322      636F756E 
 2322      74735065 
 2322      72313056 
 2322      6F6C7400 
 2323              	.LASF4:
 2324 0359 6C6F6E67 		.ascii	"long int\000"
 2324      20696E74 
 2324      00
 2325              	.LASF18:
 2326 0362 63686172 		.ascii	"char\000"
 2326      00
 2327              	.LASF0:
 2328 0367 7369676E 		.ascii	"signed char\000"
 2328      65642063 
ARM GAS  C:\Users\Rohit\AppData\Local\Temp\ccxw7f4d.s 			page 60


 2328      68617200 
 2329              	.LASF56:
 2330 0373 4144435F 		.ascii	"ADC_initVar\000"
 2330      696E6974 
 2330      56617200 
 2331              	.LASF17:
 2332 037f 696E7436 		.ascii	"int64\000"
 2332      3400
 2333              	.LASF26:
 2334 0385 4144435F 		.ascii	"ADC_Stop\000"
 2334      53746F70 
 2334      00
 2335              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
